
004_add.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001128  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000040  080012c8  080012c8  000022c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001308  08001308  00003064  2**0
                  CONTENTS
  4 .ARM          00000008  08001308  08001308  00002308  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001310  08001310  00003064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001310  08001310  00002310  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001314  08001314  00002314  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000064  20000000  08001318  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000170  20000064  0800137c  00003064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001d4  0800137c  000031d4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00003064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000920  00000000  00000000  00003094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000338  00000000  00000000  000039b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000110  00000000  00000000  00003cf0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000b8  00000000  00000000  00003e00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00004223  00000000  00000000  00003eb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000011b6  00000000  00000000  000080db  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000973e  00000000  00000000  00009291  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000129cf  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000ae0  00000000  00000000  00012a14  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000069  00000000  00000000  000134f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080012b0 	.word	0x080012b0

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	080012b0 	.word	0x080012b0

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:
int a = -4000;
int b = 200;
int result;

int main(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0
	result = a + b;
 8000284:	4b07      	ldr	r3, [pc, #28]	@ (80002a4 <main+0x24>)
 8000286:	681a      	ldr	r2, [r3, #0]
 8000288:	4b07      	ldr	r3, [pc, #28]	@ (80002a8 <main+0x28>)
 800028a:	681b      	ldr	r3, [r3, #0]
 800028c:	4413      	add	r3, r2
 800028e:	4a07      	ldr	r2, [pc, #28]	@ (80002ac <main+0x2c>)
 8000290:	6013      	str	r3, [r2, #0]

	printf("result = %d\n",result);
 8000292:	4b06      	ldr	r3, [pc, #24]	@ (80002ac <main+0x2c>)
 8000294:	681b      	ldr	r3, [r3, #0]
 8000296:	4619      	mov	r1, r3
 8000298:	4805      	ldr	r0, [pc, #20]	@ (80002b0 <main+0x30>)
 800029a:	f000 f99b 	bl	80005d4 <iprintf>

    /* Loop forever */
	for(;;);
 800029e:	bf00      	nop
 80002a0:	e7fd      	b.n	800029e <main+0x1e>
 80002a2:	bf00      	nop
 80002a4:	20000000 	.word	0x20000000
 80002a8:	20000004 	.word	0x20000004
 80002ac:	20000080 	.word	0x20000080
 80002b0:	080012c8 	.word	0x080012c8

080002b4 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002b4:	b580      	push	{r7, lr}
 80002b6:	b086      	sub	sp, #24
 80002b8:	af00      	add	r7, sp, #0
 80002ba:	60f8      	str	r0, [r7, #12]
 80002bc:	60b9      	str	r1, [r7, #8]
 80002be:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002c0:	2300      	movs	r3, #0
 80002c2:	617b      	str	r3, [r7, #20]
 80002c4:	e00a      	b.n	80002dc <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80002c6:	f3af 8000 	nop.w
 80002ca:	4601      	mov	r1, r0
 80002cc:	68bb      	ldr	r3, [r7, #8]
 80002ce:	1c5a      	adds	r2, r3, #1
 80002d0:	60ba      	str	r2, [r7, #8]
 80002d2:	b2ca      	uxtb	r2, r1
 80002d4:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002d6:	697b      	ldr	r3, [r7, #20]
 80002d8:	3301      	adds	r3, #1
 80002da:	617b      	str	r3, [r7, #20]
 80002dc:	697a      	ldr	r2, [r7, #20]
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	429a      	cmp	r2, r3
 80002e2:	dbf0      	blt.n	80002c6 <_read+0x12>
  }

  return len;
 80002e4:	687b      	ldr	r3, [r7, #4]
}
 80002e6:	4618      	mov	r0, r3
 80002e8:	3718      	adds	r7, #24
 80002ea:	46bd      	mov	sp, r7
 80002ec:	bd80      	pop	{r7, pc}

080002ee <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80002ee:	b580      	push	{r7, lr}
 80002f0:	b086      	sub	sp, #24
 80002f2:	af00      	add	r7, sp, #0
 80002f4:	60f8      	str	r0, [r7, #12]
 80002f6:	60b9      	str	r1, [r7, #8]
 80002f8:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002fa:	2300      	movs	r3, #0
 80002fc:	617b      	str	r3, [r7, #20]
 80002fe:	e009      	b.n	8000314 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000300:	68bb      	ldr	r3, [r7, #8]
 8000302:	1c5a      	adds	r2, r3, #1
 8000304:	60ba      	str	r2, [r7, #8]
 8000306:	781b      	ldrb	r3, [r3, #0]
 8000308:	4618      	mov	r0, r3
 800030a:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800030e:	697b      	ldr	r3, [r7, #20]
 8000310:	3301      	adds	r3, #1
 8000312:	617b      	str	r3, [r7, #20]
 8000314:	697a      	ldr	r2, [r7, #20]
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	429a      	cmp	r2, r3
 800031a:	dbf1      	blt.n	8000300 <_write+0x12>
  }
  return len;
 800031c:	687b      	ldr	r3, [r7, #4]
}
 800031e:	4618      	mov	r0, r3
 8000320:	3718      	adds	r7, #24
 8000322:	46bd      	mov	sp, r7
 8000324:	bd80      	pop	{r7, pc}

08000326 <_close>:

int _close(int file)
{
 8000326:	b480      	push	{r7}
 8000328:	b083      	sub	sp, #12
 800032a:	af00      	add	r7, sp, #0
 800032c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800032e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 8000332:	4618      	mov	r0, r3
 8000334:	370c      	adds	r7, #12
 8000336:	46bd      	mov	sp, r7
 8000338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800033c:	4770      	bx	lr

0800033e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800033e:	b480      	push	{r7}
 8000340:	b083      	sub	sp, #12
 8000342:	af00      	add	r7, sp, #0
 8000344:	6078      	str	r0, [r7, #4]
 8000346:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000348:	683b      	ldr	r3, [r7, #0]
 800034a:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800034e:	605a      	str	r2, [r3, #4]
  return 0;
 8000350:	2300      	movs	r3, #0
}
 8000352:	4618      	mov	r0, r3
 8000354:	370c      	adds	r7, #12
 8000356:	46bd      	mov	sp, r7
 8000358:	f85d 7b04 	ldr.w	r7, [sp], #4
 800035c:	4770      	bx	lr

0800035e <_isatty>:

int _isatty(int file)
{
 800035e:	b480      	push	{r7}
 8000360:	b083      	sub	sp, #12
 8000362:	af00      	add	r7, sp, #0
 8000364:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000366:	2301      	movs	r3, #1
}
 8000368:	4618      	mov	r0, r3
 800036a:	370c      	adds	r7, #12
 800036c:	46bd      	mov	sp, r7
 800036e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000372:	4770      	bx	lr

08000374 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000374:	b480      	push	{r7}
 8000376:	b085      	sub	sp, #20
 8000378:	af00      	add	r7, sp, #0
 800037a:	60f8      	str	r0, [r7, #12]
 800037c:	60b9      	str	r1, [r7, #8]
 800037e:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000380:	2300      	movs	r3, #0
}
 8000382:	4618      	mov	r0, r3
 8000384:	3714      	adds	r7, #20
 8000386:	46bd      	mov	sp, r7
 8000388:	f85d 7b04 	ldr.w	r7, [sp], #4
 800038c:	4770      	bx	lr
	...

08000390 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000390:	b580      	push	{r7, lr}
 8000392:	b086      	sub	sp, #24
 8000394:	af00      	add	r7, sp, #0
 8000396:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000398:	4a14      	ldr	r2, [pc, #80]	@ (80003ec <_sbrk+0x5c>)
 800039a:	4b15      	ldr	r3, [pc, #84]	@ (80003f0 <_sbrk+0x60>)
 800039c:	1ad3      	subs	r3, r2, r3
 800039e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003a0:	697b      	ldr	r3, [r7, #20]
 80003a2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003a4:	4b13      	ldr	r3, [pc, #76]	@ (80003f4 <_sbrk+0x64>)
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	2b00      	cmp	r3, #0
 80003aa:	d102      	bne.n	80003b2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003ac:	4b11      	ldr	r3, [pc, #68]	@ (80003f4 <_sbrk+0x64>)
 80003ae:	4a12      	ldr	r2, [pc, #72]	@ (80003f8 <_sbrk+0x68>)
 80003b0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003b2:	4b10      	ldr	r3, [pc, #64]	@ (80003f4 <_sbrk+0x64>)
 80003b4:	681a      	ldr	r2, [r3, #0]
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	4413      	add	r3, r2
 80003ba:	693a      	ldr	r2, [r7, #16]
 80003bc:	429a      	cmp	r2, r3
 80003be:	d207      	bcs.n	80003d0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003c0:	f000 f9ac 	bl	800071c <__errno>
 80003c4:	4603      	mov	r3, r0
 80003c6:	220c      	movs	r2, #12
 80003c8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003ca:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80003ce:	e009      	b.n	80003e4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003d0:	4b08      	ldr	r3, [pc, #32]	@ (80003f4 <_sbrk+0x64>)
 80003d2:	681b      	ldr	r3, [r3, #0]
 80003d4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003d6:	4b07      	ldr	r3, [pc, #28]	@ (80003f4 <_sbrk+0x64>)
 80003d8:	681a      	ldr	r2, [r3, #0]
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	4413      	add	r3, r2
 80003de:	4a05      	ldr	r2, [pc, #20]	@ (80003f4 <_sbrk+0x64>)
 80003e0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80003e2:	68fb      	ldr	r3, [r7, #12]
}
 80003e4:	4618      	mov	r0, r3
 80003e6:	3718      	adds	r7, #24
 80003e8:	46bd      	mov	sp, r7
 80003ea:	bd80      	pop	{r7, pc}
 80003ec:	20018000 	.word	0x20018000
 80003f0:	00000400 	.word	0x00000400
 80003f4:	20000084 	.word	0x20000084
 80003f8:	200001d8 	.word	0x200001d8

080003fc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003fc:	480d      	ldr	r0, [pc, #52]	@ (8000434 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003fe:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000400:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000404:	480c      	ldr	r0, [pc, #48]	@ (8000438 <LoopForever+0x6>)
  ldr r1, =_edata
 8000406:	490d      	ldr	r1, [pc, #52]	@ (800043c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000408:	4a0d      	ldr	r2, [pc, #52]	@ (8000440 <LoopForever+0xe>)
  movs r3, #0
 800040a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800040c:	e002      	b.n	8000414 <LoopCopyDataInit>

0800040e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800040e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000410:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000412:	3304      	adds	r3, #4

08000414 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000414:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000416:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000418:	d3f9      	bcc.n	800040e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800041a:	4a0a      	ldr	r2, [pc, #40]	@ (8000444 <LoopForever+0x12>)
  ldr r4, =_ebss
 800041c:	4c0a      	ldr	r4, [pc, #40]	@ (8000448 <LoopForever+0x16>)
  movs r3, #0
 800041e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000420:	e001      	b.n	8000426 <LoopFillZerobss>

08000422 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000422:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000424:	3204      	adds	r2, #4

08000426 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000426:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000428:	d3fb      	bcc.n	8000422 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800042a:	f000 f97d 	bl	8000728 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800042e:	f7ff ff27 	bl	8000280 <main>

08000432 <LoopForever>:

LoopForever:
  b LoopForever
 8000432:	e7fe      	b.n	8000432 <LoopForever>
  ldr   r0, =_estack
 8000434:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000438:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800043c:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000440:	08001318 	.word	0x08001318
  ldr r2, =_sbss
 8000444:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000448:	200001d4 	.word	0x200001d4

0800044c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800044c:	e7fe      	b.n	800044c <ADC_IRQHandler>
	...

08000450 <std>:
 8000450:	2300      	movs	r3, #0
 8000452:	b510      	push	{r4, lr}
 8000454:	4604      	mov	r4, r0
 8000456:	e9c0 3300 	strd	r3, r3, [r0]
 800045a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800045e:	6083      	str	r3, [r0, #8]
 8000460:	8181      	strh	r1, [r0, #12]
 8000462:	6643      	str	r3, [r0, #100]	@ 0x64
 8000464:	81c2      	strh	r2, [r0, #14]
 8000466:	6183      	str	r3, [r0, #24]
 8000468:	4619      	mov	r1, r3
 800046a:	2208      	movs	r2, #8
 800046c:	305c      	adds	r0, #92	@ 0x5c
 800046e:	f000 f906 	bl	800067e <memset>
 8000472:	4b0d      	ldr	r3, [pc, #52]	@ (80004a8 <std+0x58>)
 8000474:	6263      	str	r3, [r4, #36]	@ 0x24
 8000476:	4b0d      	ldr	r3, [pc, #52]	@ (80004ac <std+0x5c>)
 8000478:	62a3      	str	r3, [r4, #40]	@ 0x28
 800047a:	4b0d      	ldr	r3, [pc, #52]	@ (80004b0 <std+0x60>)
 800047c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800047e:	4b0d      	ldr	r3, [pc, #52]	@ (80004b4 <std+0x64>)
 8000480:	6323      	str	r3, [r4, #48]	@ 0x30
 8000482:	4b0d      	ldr	r3, [pc, #52]	@ (80004b8 <std+0x68>)
 8000484:	6224      	str	r4, [r4, #32]
 8000486:	429c      	cmp	r4, r3
 8000488:	d006      	beq.n	8000498 <std+0x48>
 800048a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800048e:	4294      	cmp	r4, r2
 8000490:	d002      	beq.n	8000498 <std+0x48>
 8000492:	33d0      	adds	r3, #208	@ 0xd0
 8000494:	429c      	cmp	r4, r3
 8000496:	d105      	bne.n	80004a4 <std+0x54>
 8000498:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800049c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004a0:	f000 b966 	b.w	8000770 <__retarget_lock_init_recursive>
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	bf00      	nop
 80004a8:	080005f9 	.word	0x080005f9
 80004ac:	0800061b 	.word	0x0800061b
 80004b0:	08000653 	.word	0x08000653
 80004b4:	08000677 	.word	0x08000677
 80004b8:	20000088 	.word	0x20000088

080004bc <stdio_exit_handler>:
 80004bc:	4a02      	ldr	r2, [pc, #8]	@ (80004c8 <stdio_exit_handler+0xc>)
 80004be:	4903      	ldr	r1, [pc, #12]	@ (80004cc <stdio_exit_handler+0x10>)
 80004c0:	4803      	ldr	r0, [pc, #12]	@ (80004d0 <stdio_exit_handler+0x14>)
 80004c2:	f000 b869 	b.w	8000598 <_fwalk_sglue>
 80004c6:	bf00      	nop
 80004c8:	20000008 	.word	0x20000008
 80004cc:	08001011 	.word	0x08001011
 80004d0:	20000018 	.word	0x20000018

080004d4 <cleanup_stdio>:
 80004d4:	6841      	ldr	r1, [r0, #4]
 80004d6:	4b0c      	ldr	r3, [pc, #48]	@ (8000508 <cleanup_stdio+0x34>)
 80004d8:	4299      	cmp	r1, r3
 80004da:	b510      	push	{r4, lr}
 80004dc:	4604      	mov	r4, r0
 80004de:	d001      	beq.n	80004e4 <cleanup_stdio+0x10>
 80004e0:	f000 fd96 	bl	8001010 <_fflush_r>
 80004e4:	68a1      	ldr	r1, [r4, #8]
 80004e6:	4b09      	ldr	r3, [pc, #36]	@ (800050c <cleanup_stdio+0x38>)
 80004e8:	4299      	cmp	r1, r3
 80004ea:	d002      	beq.n	80004f2 <cleanup_stdio+0x1e>
 80004ec:	4620      	mov	r0, r4
 80004ee:	f000 fd8f 	bl	8001010 <_fflush_r>
 80004f2:	68e1      	ldr	r1, [r4, #12]
 80004f4:	4b06      	ldr	r3, [pc, #24]	@ (8000510 <cleanup_stdio+0x3c>)
 80004f6:	4299      	cmp	r1, r3
 80004f8:	d004      	beq.n	8000504 <cleanup_stdio+0x30>
 80004fa:	4620      	mov	r0, r4
 80004fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000500:	f000 bd86 	b.w	8001010 <_fflush_r>
 8000504:	bd10      	pop	{r4, pc}
 8000506:	bf00      	nop
 8000508:	20000088 	.word	0x20000088
 800050c:	200000f0 	.word	0x200000f0
 8000510:	20000158 	.word	0x20000158

08000514 <global_stdio_init.part.0>:
 8000514:	b510      	push	{r4, lr}
 8000516:	4b0b      	ldr	r3, [pc, #44]	@ (8000544 <global_stdio_init.part.0+0x30>)
 8000518:	4c0b      	ldr	r4, [pc, #44]	@ (8000548 <global_stdio_init.part.0+0x34>)
 800051a:	4a0c      	ldr	r2, [pc, #48]	@ (800054c <global_stdio_init.part.0+0x38>)
 800051c:	601a      	str	r2, [r3, #0]
 800051e:	4620      	mov	r0, r4
 8000520:	2200      	movs	r2, #0
 8000522:	2104      	movs	r1, #4
 8000524:	f7ff ff94 	bl	8000450 <std>
 8000528:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800052c:	2201      	movs	r2, #1
 800052e:	2109      	movs	r1, #9
 8000530:	f7ff ff8e 	bl	8000450 <std>
 8000534:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000538:	2202      	movs	r2, #2
 800053a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800053e:	2112      	movs	r1, #18
 8000540:	f7ff bf86 	b.w	8000450 <std>
 8000544:	200001c0 	.word	0x200001c0
 8000548:	20000088 	.word	0x20000088
 800054c:	080004bd 	.word	0x080004bd

08000550 <__sfp_lock_acquire>:
 8000550:	4801      	ldr	r0, [pc, #4]	@ (8000558 <__sfp_lock_acquire+0x8>)
 8000552:	f000 b90e 	b.w	8000772 <__retarget_lock_acquire_recursive>
 8000556:	bf00      	nop
 8000558:	200001c9 	.word	0x200001c9

0800055c <__sfp_lock_release>:
 800055c:	4801      	ldr	r0, [pc, #4]	@ (8000564 <__sfp_lock_release+0x8>)
 800055e:	f000 b909 	b.w	8000774 <__retarget_lock_release_recursive>
 8000562:	bf00      	nop
 8000564:	200001c9 	.word	0x200001c9

08000568 <__sinit>:
 8000568:	b510      	push	{r4, lr}
 800056a:	4604      	mov	r4, r0
 800056c:	f7ff fff0 	bl	8000550 <__sfp_lock_acquire>
 8000570:	6a23      	ldr	r3, [r4, #32]
 8000572:	b11b      	cbz	r3, 800057c <__sinit+0x14>
 8000574:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000578:	f7ff bff0 	b.w	800055c <__sfp_lock_release>
 800057c:	4b04      	ldr	r3, [pc, #16]	@ (8000590 <__sinit+0x28>)
 800057e:	6223      	str	r3, [r4, #32]
 8000580:	4b04      	ldr	r3, [pc, #16]	@ (8000594 <__sinit+0x2c>)
 8000582:	681b      	ldr	r3, [r3, #0]
 8000584:	2b00      	cmp	r3, #0
 8000586:	d1f5      	bne.n	8000574 <__sinit+0xc>
 8000588:	f7ff ffc4 	bl	8000514 <global_stdio_init.part.0>
 800058c:	e7f2      	b.n	8000574 <__sinit+0xc>
 800058e:	bf00      	nop
 8000590:	080004d5 	.word	0x080004d5
 8000594:	200001c0 	.word	0x200001c0

08000598 <_fwalk_sglue>:
 8000598:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800059c:	4607      	mov	r7, r0
 800059e:	4688      	mov	r8, r1
 80005a0:	4614      	mov	r4, r2
 80005a2:	2600      	movs	r6, #0
 80005a4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80005a8:	f1b9 0901 	subs.w	r9, r9, #1
 80005ac:	d505      	bpl.n	80005ba <_fwalk_sglue+0x22>
 80005ae:	6824      	ldr	r4, [r4, #0]
 80005b0:	2c00      	cmp	r4, #0
 80005b2:	d1f7      	bne.n	80005a4 <_fwalk_sglue+0xc>
 80005b4:	4630      	mov	r0, r6
 80005b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80005ba:	89ab      	ldrh	r3, [r5, #12]
 80005bc:	2b01      	cmp	r3, #1
 80005be:	d907      	bls.n	80005d0 <_fwalk_sglue+0x38>
 80005c0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80005c4:	3301      	adds	r3, #1
 80005c6:	d003      	beq.n	80005d0 <_fwalk_sglue+0x38>
 80005c8:	4629      	mov	r1, r5
 80005ca:	4638      	mov	r0, r7
 80005cc:	47c0      	blx	r8
 80005ce:	4306      	orrs	r6, r0
 80005d0:	3568      	adds	r5, #104	@ 0x68
 80005d2:	e7e9      	b.n	80005a8 <_fwalk_sglue+0x10>

080005d4 <iprintf>:
 80005d4:	b40f      	push	{r0, r1, r2, r3}
 80005d6:	b507      	push	{r0, r1, r2, lr}
 80005d8:	4906      	ldr	r1, [pc, #24]	@ (80005f4 <iprintf+0x20>)
 80005da:	ab04      	add	r3, sp, #16
 80005dc:	6808      	ldr	r0, [r1, #0]
 80005de:	f853 2b04 	ldr.w	r2, [r3], #4
 80005e2:	6881      	ldr	r1, [r0, #8]
 80005e4:	9301      	str	r3, [sp, #4]
 80005e6:	f000 f9e9 	bl	80009bc <_vfiprintf_r>
 80005ea:	b003      	add	sp, #12
 80005ec:	f85d eb04 	ldr.w	lr, [sp], #4
 80005f0:	b004      	add	sp, #16
 80005f2:	4770      	bx	lr
 80005f4:	20000014 	.word	0x20000014

080005f8 <__sread>:
 80005f8:	b510      	push	{r4, lr}
 80005fa:	460c      	mov	r4, r1
 80005fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000600:	f000 f868 	bl	80006d4 <_read_r>
 8000604:	2800      	cmp	r0, #0
 8000606:	bfab      	itete	ge
 8000608:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800060a:	89a3      	ldrhlt	r3, [r4, #12]
 800060c:	181b      	addge	r3, r3, r0
 800060e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000612:	bfac      	ite	ge
 8000614:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000616:	81a3      	strhlt	r3, [r4, #12]
 8000618:	bd10      	pop	{r4, pc}

0800061a <__swrite>:
 800061a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800061e:	461f      	mov	r7, r3
 8000620:	898b      	ldrh	r3, [r1, #12]
 8000622:	05db      	lsls	r3, r3, #23
 8000624:	4605      	mov	r5, r0
 8000626:	460c      	mov	r4, r1
 8000628:	4616      	mov	r6, r2
 800062a:	d505      	bpl.n	8000638 <__swrite+0x1e>
 800062c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000630:	2302      	movs	r3, #2
 8000632:	2200      	movs	r2, #0
 8000634:	f000 f83c 	bl	80006b0 <_lseek_r>
 8000638:	89a3      	ldrh	r3, [r4, #12]
 800063a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800063e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000642:	81a3      	strh	r3, [r4, #12]
 8000644:	4632      	mov	r2, r6
 8000646:	463b      	mov	r3, r7
 8000648:	4628      	mov	r0, r5
 800064a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800064e:	f000 b853 	b.w	80006f8 <_write_r>

08000652 <__sseek>:
 8000652:	b510      	push	{r4, lr}
 8000654:	460c      	mov	r4, r1
 8000656:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800065a:	f000 f829 	bl	80006b0 <_lseek_r>
 800065e:	1c43      	adds	r3, r0, #1
 8000660:	89a3      	ldrh	r3, [r4, #12]
 8000662:	bf15      	itete	ne
 8000664:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000666:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800066a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800066e:	81a3      	strheq	r3, [r4, #12]
 8000670:	bf18      	it	ne
 8000672:	81a3      	strhne	r3, [r4, #12]
 8000674:	bd10      	pop	{r4, pc}

08000676 <__sclose>:
 8000676:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800067a:	f000 b809 	b.w	8000690 <_close_r>

0800067e <memset>:
 800067e:	4402      	add	r2, r0
 8000680:	4603      	mov	r3, r0
 8000682:	4293      	cmp	r3, r2
 8000684:	d100      	bne.n	8000688 <memset+0xa>
 8000686:	4770      	bx	lr
 8000688:	f803 1b01 	strb.w	r1, [r3], #1
 800068c:	e7f9      	b.n	8000682 <memset+0x4>
	...

08000690 <_close_r>:
 8000690:	b538      	push	{r3, r4, r5, lr}
 8000692:	4d06      	ldr	r5, [pc, #24]	@ (80006ac <_close_r+0x1c>)
 8000694:	2300      	movs	r3, #0
 8000696:	4604      	mov	r4, r0
 8000698:	4608      	mov	r0, r1
 800069a:	602b      	str	r3, [r5, #0]
 800069c:	f7ff fe43 	bl	8000326 <_close>
 80006a0:	1c43      	adds	r3, r0, #1
 80006a2:	d102      	bne.n	80006aa <_close_r+0x1a>
 80006a4:	682b      	ldr	r3, [r5, #0]
 80006a6:	b103      	cbz	r3, 80006aa <_close_r+0x1a>
 80006a8:	6023      	str	r3, [r4, #0]
 80006aa:	bd38      	pop	{r3, r4, r5, pc}
 80006ac:	200001c4 	.word	0x200001c4

080006b0 <_lseek_r>:
 80006b0:	b538      	push	{r3, r4, r5, lr}
 80006b2:	4d07      	ldr	r5, [pc, #28]	@ (80006d0 <_lseek_r+0x20>)
 80006b4:	4604      	mov	r4, r0
 80006b6:	4608      	mov	r0, r1
 80006b8:	4611      	mov	r1, r2
 80006ba:	2200      	movs	r2, #0
 80006bc:	602a      	str	r2, [r5, #0]
 80006be:	461a      	mov	r2, r3
 80006c0:	f7ff fe58 	bl	8000374 <_lseek>
 80006c4:	1c43      	adds	r3, r0, #1
 80006c6:	d102      	bne.n	80006ce <_lseek_r+0x1e>
 80006c8:	682b      	ldr	r3, [r5, #0]
 80006ca:	b103      	cbz	r3, 80006ce <_lseek_r+0x1e>
 80006cc:	6023      	str	r3, [r4, #0]
 80006ce:	bd38      	pop	{r3, r4, r5, pc}
 80006d0:	200001c4 	.word	0x200001c4

080006d4 <_read_r>:
 80006d4:	b538      	push	{r3, r4, r5, lr}
 80006d6:	4d07      	ldr	r5, [pc, #28]	@ (80006f4 <_read_r+0x20>)
 80006d8:	4604      	mov	r4, r0
 80006da:	4608      	mov	r0, r1
 80006dc:	4611      	mov	r1, r2
 80006de:	2200      	movs	r2, #0
 80006e0:	602a      	str	r2, [r5, #0]
 80006e2:	461a      	mov	r2, r3
 80006e4:	f7ff fde6 	bl	80002b4 <_read>
 80006e8:	1c43      	adds	r3, r0, #1
 80006ea:	d102      	bne.n	80006f2 <_read_r+0x1e>
 80006ec:	682b      	ldr	r3, [r5, #0]
 80006ee:	b103      	cbz	r3, 80006f2 <_read_r+0x1e>
 80006f0:	6023      	str	r3, [r4, #0]
 80006f2:	bd38      	pop	{r3, r4, r5, pc}
 80006f4:	200001c4 	.word	0x200001c4

080006f8 <_write_r>:
 80006f8:	b538      	push	{r3, r4, r5, lr}
 80006fa:	4d07      	ldr	r5, [pc, #28]	@ (8000718 <_write_r+0x20>)
 80006fc:	4604      	mov	r4, r0
 80006fe:	4608      	mov	r0, r1
 8000700:	4611      	mov	r1, r2
 8000702:	2200      	movs	r2, #0
 8000704:	602a      	str	r2, [r5, #0]
 8000706:	461a      	mov	r2, r3
 8000708:	f7ff fdf1 	bl	80002ee <_write>
 800070c:	1c43      	adds	r3, r0, #1
 800070e:	d102      	bne.n	8000716 <_write_r+0x1e>
 8000710:	682b      	ldr	r3, [r5, #0]
 8000712:	b103      	cbz	r3, 8000716 <_write_r+0x1e>
 8000714:	6023      	str	r3, [r4, #0]
 8000716:	bd38      	pop	{r3, r4, r5, pc}
 8000718:	200001c4 	.word	0x200001c4

0800071c <__errno>:
 800071c:	4b01      	ldr	r3, [pc, #4]	@ (8000724 <__errno+0x8>)
 800071e:	6818      	ldr	r0, [r3, #0]
 8000720:	4770      	bx	lr
 8000722:	bf00      	nop
 8000724:	20000014 	.word	0x20000014

08000728 <__libc_init_array>:
 8000728:	b570      	push	{r4, r5, r6, lr}
 800072a:	4d0d      	ldr	r5, [pc, #52]	@ (8000760 <__libc_init_array+0x38>)
 800072c:	4c0d      	ldr	r4, [pc, #52]	@ (8000764 <__libc_init_array+0x3c>)
 800072e:	1b64      	subs	r4, r4, r5
 8000730:	10a4      	asrs	r4, r4, #2
 8000732:	2600      	movs	r6, #0
 8000734:	42a6      	cmp	r6, r4
 8000736:	d109      	bne.n	800074c <__libc_init_array+0x24>
 8000738:	4d0b      	ldr	r5, [pc, #44]	@ (8000768 <__libc_init_array+0x40>)
 800073a:	4c0c      	ldr	r4, [pc, #48]	@ (800076c <__libc_init_array+0x44>)
 800073c:	f000 fdb8 	bl	80012b0 <_init>
 8000740:	1b64      	subs	r4, r4, r5
 8000742:	10a4      	asrs	r4, r4, #2
 8000744:	2600      	movs	r6, #0
 8000746:	42a6      	cmp	r6, r4
 8000748:	d105      	bne.n	8000756 <__libc_init_array+0x2e>
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000750:	4798      	blx	r3
 8000752:	3601      	adds	r6, #1
 8000754:	e7ee      	b.n	8000734 <__libc_init_array+0xc>
 8000756:	f855 3b04 	ldr.w	r3, [r5], #4
 800075a:	4798      	blx	r3
 800075c:	3601      	adds	r6, #1
 800075e:	e7f2      	b.n	8000746 <__libc_init_array+0x1e>
 8000760:	08001310 	.word	0x08001310
 8000764:	08001310 	.word	0x08001310
 8000768:	08001310 	.word	0x08001310
 800076c:	08001314 	.word	0x08001314

08000770 <__retarget_lock_init_recursive>:
 8000770:	4770      	bx	lr

08000772 <__retarget_lock_acquire_recursive>:
 8000772:	4770      	bx	lr

08000774 <__retarget_lock_release_recursive>:
 8000774:	4770      	bx	lr
	...

08000778 <_free_r>:
 8000778:	b538      	push	{r3, r4, r5, lr}
 800077a:	4605      	mov	r5, r0
 800077c:	2900      	cmp	r1, #0
 800077e:	d041      	beq.n	8000804 <_free_r+0x8c>
 8000780:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000784:	1f0c      	subs	r4, r1, #4
 8000786:	2b00      	cmp	r3, #0
 8000788:	bfb8      	it	lt
 800078a:	18e4      	addlt	r4, r4, r3
 800078c:	f000 f8e0 	bl	8000950 <__malloc_lock>
 8000790:	4a1d      	ldr	r2, [pc, #116]	@ (8000808 <_free_r+0x90>)
 8000792:	6813      	ldr	r3, [r2, #0]
 8000794:	b933      	cbnz	r3, 80007a4 <_free_r+0x2c>
 8000796:	6063      	str	r3, [r4, #4]
 8000798:	6014      	str	r4, [r2, #0]
 800079a:	4628      	mov	r0, r5
 800079c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80007a0:	f000 b8dc 	b.w	800095c <__malloc_unlock>
 80007a4:	42a3      	cmp	r3, r4
 80007a6:	d908      	bls.n	80007ba <_free_r+0x42>
 80007a8:	6820      	ldr	r0, [r4, #0]
 80007aa:	1821      	adds	r1, r4, r0
 80007ac:	428b      	cmp	r3, r1
 80007ae:	bf01      	itttt	eq
 80007b0:	6819      	ldreq	r1, [r3, #0]
 80007b2:	685b      	ldreq	r3, [r3, #4]
 80007b4:	1809      	addeq	r1, r1, r0
 80007b6:	6021      	streq	r1, [r4, #0]
 80007b8:	e7ed      	b.n	8000796 <_free_r+0x1e>
 80007ba:	461a      	mov	r2, r3
 80007bc:	685b      	ldr	r3, [r3, #4]
 80007be:	b10b      	cbz	r3, 80007c4 <_free_r+0x4c>
 80007c0:	42a3      	cmp	r3, r4
 80007c2:	d9fa      	bls.n	80007ba <_free_r+0x42>
 80007c4:	6811      	ldr	r1, [r2, #0]
 80007c6:	1850      	adds	r0, r2, r1
 80007c8:	42a0      	cmp	r0, r4
 80007ca:	d10b      	bne.n	80007e4 <_free_r+0x6c>
 80007cc:	6820      	ldr	r0, [r4, #0]
 80007ce:	4401      	add	r1, r0
 80007d0:	1850      	adds	r0, r2, r1
 80007d2:	4283      	cmp	r3, r0
 80007d4:	6011      	str	r1, [r2, #0]
 80007d6:	d1e0      	bne.n	800079a <_free_r+0x22>
 80007d8:	6818      	ldr	r0, [r3, #0]
 80007da:	685b      	ldr	r3, [r3, #4]
 80007dc:	6053      	str	r3, [r2, #4]
 80007de:	4408      	add	r0, r1
 80007e0:	6010      	str	r0, [r2, #0]
 80007e2:	e7da      	b.n	800079a <_free_r+0x22>
 80007e4:	d902      	bls.n	80007ec <_free_r+0x74>
 80007e6:	230c      	movs	r3, #12
 80007e8:	602b      	str	r3, [r5, #0]
 80007ea:	e7d6      	b.n	800079a <_free_r+0x22>
 80007ec:	6820      	ldr	r0, [r4, #0]
 80007ee:	1821      	adds	r1, r4, r0
 80007f0:	428b      	cmp	r3, r1
 80007f2:	bf04      	itt	eq
 80007f4:	6819      	ldreq	r1, [r3, #0]
 80007f6:	685b      	ldreq	r3, [r3, #4]
 80007f8:	6063      	str	r3, [r4, #4]
 80007fa:	bf04      	itt	eq
 80007fc:	1809      	addeq	r1, r1, r0
 80007fe:	6021      	streq	r1, [r4, #0]
 8000800:	6054      	str	r4, [r2, #4]
 8000802:	e7ca      	b.n	800079a <_free_r+0x22>
 8000804:	bd38      	pop	{r3, r4, r5, pc}
 8000806:	bf00      	nop
 8000808:	200001d0 	.word	0x200001d0

0800080c <sbrk_aligned>:
 800080c:	b570      	push	{r4, r5, r6, lr}
 800080e:	4e0f      	ldr	r6, [pc, #60]	@ (800084c <sbrk_aligned+0x40>)
 8000810:	460c      	mov	r4, r1
 8000812:	6831      	ldr	r1, [r6, #0]
 8000814:	4605      	mov	r5, r0
 8000816:	b911      	cbnz	r1, 800081e <sbrk_aligned+0x12>
 8000818:	f000 fcb6 	bl	8001188 <_sbrk_r>
 800081c:	6030      	str	r0, [r6, #0]
 800081e:	4621      	mov	r1, r4
 8000820:	4628      	mov	r0, r5
 8000822:	f000 fcb1 	bl	8001188 <_sbrk_r>
 8000826:	1c43      	adds	r3, r0, #1
 8000828:	d103      	bne.n	8000832 <sbrk_aligned+0x26>
 800082a:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 800082e:	4620      	mov	r0, r4
 8000830:	bd70      	pop	{r4, r5, r6, pc}
 8000832:	1cc4      	adds	r4, r0, #3
 8000834:	f024 0403 	bic.w	r4, r4, #3
 8000838:	42a0      	cmp	r0, r4
 800083a:	d0f8      	beq.n	800082e <sbrk_aligned+0x22>
 800083c:	1a21      	subs	r1, r4, r0
 800083e:	4628      	mov	r0, r5
 8000840:	f000 fca2 	bl	8001188 <_sbrk_r>
 8000844:	3001      	adds	r0, #1
 8000846:	d1f2      	bne.n	800082e <sbrk_aligned+0x22>
 8000848:	e7ef      	b.n	800082a <sbrk_aligned+0x1e>
 800084a:	bf00      	nop
 800084c:	200001cc 	.word	0x200001cc

08000850 <_malloc_r>:
 8000850:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000854:	1ccd      	adds	r5, r1, #3
 8000856:	f025 0503 	bic.w	r5, r5, #3
 800085a:	3508      	adds	r5, #8
 800085c:	2d0c      	cmp	r5, #12
 800085e:	bf38      	it	cc
 8000860:	250c      	movcc	r5, #12
 8000862:	2d00      	cmp	r5, #0
 8000864:	4606      	mov	r6, r0
 8000866:	db01      	blt.n	800086c <_malloc_r+0x1c>
 8000868:	42a9      	cmp	r1, r5
 800086a:	d904      	bls.n	8000876 <_malloc_r+0x26>
 800086c:	230c      	movs	r3, #12
 800086e:	6033      	str	r3, [r6, #0]
 8000870:	2000      	movs	r0, #0
 8000872:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000876:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800094c <_malloc_r+0xfc>
 800087a:	f000 f869 	bl	8000950 <__malloc_lock>
 800087e:	f8d8 3000 	ldr.w	r3, [r8]
 8000882:	461c      	mov	r4, r3
 8000884:	bb44      	cbnz	r4, 80008d8 <_malloc_r+0x88>
 8000886:	4629      	mov	r1, r5
 8000888:	4630      	mov	r0, r6
 800088a:	f7ff ffbf 	bl	800080c <sbrk_aligned>
 800088e:	1c43      	adds	r3, r0, #1
 8000890:	4604      	mov	r4, r0
 8000892:	d158      	bne.n	8000946 <_malloc_r+0xf6>
 8000894:	f8d8 4000 	ldr.w	r4, [r8]
 8000898:	4627      	mov	r7, r4
 800089a:	2f00      	cmp	r7, #0
 800089c:	d143      	bne.n	8000926 <_malloc_r+0xd6>
 800089e:	2c00      	cmp	r4, #0
 80008a0:	d04b      	beq.n	800093a <_malloc_r+0xea>
 80008a2:	6823      	ldr	r3, [r4, #0]
 80008a4:	4639      	mov	r1, r7
 80008a6:	4630      	mov	r0, r6
 80008a8:	eb04 0903 	add.w	r9, r4, r3
 80008ac:	f000 fc6c 	bl	8001188 <_sbrk_r>
 80008b0:	4581      	cmp	r9, r0
 80008b2:	d142      	bne.n	800093a <_malloc_r+0xea>
 80008b4:	6821      	ldr	r1, [r4, #0]
 80008b6:	1a6d      	subs	r5, r5, r1
 80008b8:	4629      	mov	r1, r5
 80008ba:	4630      	mov	r0, r6
 80008bc:	f7ff ffa6 	bl	800080c <sbrk_aligned>
 80008c0:	3001      	adds	r0, #1
 80008c2:	d03a      	beq.n	800093a <_malloc_r+0xea>
 80008c4:	6823      	ldr	r3, [r4, #0]
 80008c6:	442b      	add	r3, r5
 80008c8:	6023      	str	r3, [r4, #0]
 80008ca:	f8d8 3000 	ldr.w	r3, [r8]
 80008ce:	685a      	ldr	r2, [r3, #4]
 80008d0:	bb62      	cbnz	r2, 800092c <_malloc_r+0xdc>
 80008d2:	f8c8 7000 	str.w	r7, [r8]
 80008d6:	e00f      	b.n	80008f8 <_malloc_r+0xa8>
 80008d8:	6822      	ldr	r2, [r4, #0]
 80008da:	1b52      	subs	r2, r2, r5
 80008dc:	d420      	bmi.n	8000920 <_malloc_r+0xd0>
 80008de:	2a0b      	cmp	r2, #11
 80008e0:	d917      	bls.n	8000912 <_malloc_r+0xc2>
 80008e2:	1961      	adds	r1, r4, r5
 80008e4:	42a3      	cmp	r3, r4
 80008e6:	6025      	str	r5, [r4, #0]
 80008e8:	bf18      	it	ne
 80008ea:	6059      	strne	r1, [r3, #4]
 80008ec:	6863      	ldr	r3, [r4, #4]
 80008ee:	bf08      	it	eq
 80008f0:	f8c8 1000 	streq.w	r1, [r8]
 80008f4:	5162      	str	r2, [r4, r5]
 80008f6:	604b      	str	r3, [r1, #4]
 80008f8:	4630      	mov	r0, r6
 80008fa:	f000 f82f 	bl	800095c <__malloc_unlock>
 80008fe:	f104 000b 	add.w	r0, r4, #11
 8000902:	1d23      	adds	r3, r4, #4
 8000904:	f020 0007 	bic.w	r0, r0, #7
 8000908:	1ac2      	subs	r2, r0, r3
 800090a:	bf1c      	itt	ne
 800090c:	1a1b      	subne	r3, r3, r0
 800090e:	50a3      	strne	r3, [r4, r2]
 8000910:	e7af      	b.n	8000872 <_malloc_r+0x22>
 8000912:	6862      	ldr	r2, [r4, #4]
 8000914:	42a3      	cmp	r3, r4
 8000916:	bf0c      	ite	eq
 8000918:	f8c8 2000 	streq.w	r2, [r8]
 800091c:	605a      	strne	r2, [r3, #4]
 800091e:	e7eb      	b.n	80008f8 <_malloc_r+0xa8>
 8000920:	4623      	mov	r3, r4
 8000922:	6864      	ldr	r4, [r4, #4]
 8000924:	e7ae      	b.n	8000884 <_malloc_r+0x34>
 8000926:	463c      	mov	r4, r7
 8000928:	687f      	ldr	r7, [r7, #4]
 800092a:	e7b6      	b.n	800089a <_malloc_r+0x4a>
 800092c:	461a      	mov	r2, r3
 800092e:	685b      	ldr	r3, [r3, #4]
 8000930:	42a3      	cmp	r3, r4
 8000932:	d1fb      	bne.n	800092c <_malloc_r+0xdc>
 8000934:	2300      	movs	r3, #0
 8000936:	6053      	str	r3, [r2, #4]
 8000938:	e7de      	b.n	80008f8 <_malloc_r+0xa8>
 800093a:	230c      	movs	r3, #12
 800093c:	6033      	str	r3, [r6, #0]
 800093e:	4630      	mov	r0, r6
 8000940:	f000 f80c 	bl	800095c <__malloc_unlock>
 8000944:	e794      	b.n	8000870 <_malloc_r+0x20>
 8000946:	6005      	str	r5, [r0, #0]
 8000948:	e7d6      	b.n	80008f8 <_malloc_r+0xa8>
 800094a:	bf00      	nop
 800094c:	200001d0 	.word	0x200001d0

08000950 <__malloc_lock>:
 8000950:	4801      	ldr	r0, [pc, #4]	@ (8000958 <__malloc_lock+0x8>)
 8000952:	f7ff bf0e 	b.w	8000772 <__retarget_lock_acquire_recursive>
 8000956:	bf00      	nop
 8000958:	200001c8 	.word	0x200001c8

0800095c <__malloc_unlock>:
 800095c:	4801      	ldr	r0, [pc, #4]	@ (8000964 <__malloc_unlock+0x8>)
 800095e:	f7ff bf09 	b.w	8000774 <__retarget_lock_release_recursive>
 8000962:	bf00      	nop
 8000964:	200001c8 	.word	0x200001c8

08000968 <__sfputc_r>:
 8000968:	6893      	ldr	r3, [r2, #8]
 800096a:	3b01      	subs	r3, #1
 800096c:	2b00      	cmp	r3, #0
 800096e:	b410      	push	{r4}
 8000970:	6093      	str	r3, [r2, #8]
 8000972:	da08      	bge.n	8000986 <__sfputc_r+0x1e>
 8000974:	6994      	ldr	r4, [r2, #24]
 8000976:	42a3      	cmp	r3, r4
 8000978:	db01      	blt.n	800097e <__sfputc_r+0x16>
 800097a:	290a      	cmp	r1, #10
 800097c:	d103      	bne.n	8000986 <__sfputc_r+0x1e>
 800097e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000982:	f000 bb6d 	b.w	8001060 <__swbuf_r>
 8000986:	6813      	ldr	r3, [r2, #0]
 8000988:	1c58      	adds	r0, r3, #1
 800098a:	6010      	str	r0, [r2, #0]
 800098c:	7019      	strb	r1, [r3, #0]
 800098e:	4608      	mov	r0, r1
 8000990:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000994:	4770      	bx	lr

08000996 <__sfputs_r>:
 8000996:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000998:	4606      	mov	r6, r0
 800099a:	460f      	mov	r7, r1
 800099c:	4614      	mov	r4, r2
 800099e:	18d5      	adds	r5, r2, r3
 80009a0:	42ac      	cmp	r4, r5
 80009a2:	d101      	bne.n	80009a8 <__sfputs_r+0x12>
 80009a4:	2000      	movs	r0, #0
 80009a6:	e007      	b.n	80009b8 <__sfputs_r+0x22>
 80009a8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009ac:	463a      	mov	r2, r7
 80009ae:	4630      	mov	r0, r6
 80009b0:	f7ff ffda 	bl	8000968 <__sfputc_r>
 80009b4:	1c43      	adds	r3, r0, #1
 80009b6:	d1f3      	bne.n	80009a0 <__sfputs_r+0xa>
 80009b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080009bc <_vfiprintf_r>:
 80009bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80009c0:	460d      	mov	r5, r1
 80009c2:	b09d      	sub	sp, #116	@ 0x74
 80009c4:	4614      	mov	r4, r2
 80009c6:	4698      	mov	r8, r3
 80009c8:	4606      	mov	r6, r0
 80009ca:	b118      	cbz	r0, 80009d4 <_vfiprintf_r+0x18>
 80009cc:	6a03      	ldr	r3, [r0, #32]
 80009ce:	b90b      	cbnz	r3, 80009d4 <_vfiprintf_r+0x18>
 80009d0:	f7ff fdca 	bl	8000568 <__sinit>
 80009d4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80009d6:	07d9      	lsls	r1, r3, #31
 80009d8:	d405      	bmi.n	80009e6 <_vfiprintf_r+0x2a>
 80009da:	89ab      	ldrh	r3, [r5, #12]
 80009dc:	059a      	lsls	r2, r3, #22
 80009de:	d402      	bmi.n	80009e6 <_vfiprintf_r+0x2a>
 80009e0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80009e2:	f7ff fec6 	bl	8000772 <__retarget_lock_acquire_recursive>
 80009e6:	89ab      	ldrh	r3, [r5, #12]
 80009e8:	071b      	lsls	r3, r3, #28
 80009ea:	d501      	bpl.n	80009f0 <_vfiprintf_r+0x34>
 80009ec:	692b      	ldr	r3, [r5, #16]
 80009ee:	b99b      	cbnz	r3, 8000a18 <_vfiprintf_r+0x5c>
 80009f0:	4629      	mov	r1, r5
 80009f2:	4630      	mov	r0, r6
 80009f4:	f000 fb72 	bl	80010dc <__swsetup_r>
 80009f8:	b170      	cbz	r0, 8000a18 <_vfiprintf_r+0x5c>
 80009fa:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80009fc:	07dc      	lsls	r4, r3, #31
 80009fe:	d504      	bpl.n	8000a0a <_vfiprintf_r+0x4e>
 8000a00:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000a04:	b01d      	add	sp, #116	@ 0x74
 8000a06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a0a:	89ab      	ldrh	r3, [r5, #12]
 8000a0c:	0598      	lsls	r0, r3, #22
 8000a0e:	d4f7      	bmi.n	8000a00 <_vfiprintf_r+0x44>
 8000a10:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000a12:	f7ff feaf 	bl	8000774 <__retarget_lock_release_recursive>
 8000a16:	e7f3      	b.n	8000a00 <_vfiprintf_r+0x44>
 8000a18:	2300      	movs	r3, #0
 8000a1a:	9309      	str	r3, [sp, #36]	@ 0x24
 8000a1c:	2320      	movs	r3, #32
 8000a1e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000a22:	f8cd 800c 	str.w	r8, [sp, #12]
 8000a26:	2330      	movs	r3, #48	@ 0x30
 8000a28:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000bd8 <_vfiprintf_r+0x21c>
 8000a2c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000a30:	f04f 0901 	mov.w	r9, #1
 8000a34:	4623      	mov	r3, r4
 8000a36:	469a      	mov	sl, r3
 8000a38:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a3c:	b10a      	cbz	r2, 8000a42 <_vfiprintf_r+0x86>
 8000a3e:	2a25      	cmp	r2, #37	@ 0x25
 8000a40:	d1f9      	bne.n	8000a36 <_vfiprintf_r+0x7a>
 8000a42:	ebba 0b04 	subs.w	fp, sl, r4
 8000a46:	d00b      	beq.n	8000a60 <_vfiprintf_r+0xa4>
 8000a48:	465b      	mov	r3, fp
 8000a4a:	4622      	mov	r2, r4
 8000a4c:	4629      	mov	r1, r5
 8000a4e:	4630      	mov	r0, r6
 8000a50:	f7ff ffa1 	bl	8000996 <__sfputs_r>
 8000a54:	3001      	adds	r0, #1
 8000a56:	f000 80a7 	beq.w	8000ba8 <_vfiprintf_r+0x1ec>
 8000a5a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000a5c:	445a      	add	r2, fp
 8000a5e:	9209      	str	r2, [sp, #36]	@ 0x24
 8000a60:	f89a 3000 	ldrb.w	r3, [sl]
 8000a64:	2b00      	cmp	r3, #0
 8000a66:	f000 809f 	beq.w	8000ba8 <_vfiprintf_r+0x1ec>
 8000a6a:	2300      	movs	r3, #0
 8000a6c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8000a70:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000a74:	f10a 0a01 	add.w	sl, sl, #1
 8000a78:	9304      	str	r3, [sp, #16]
 8000a7a:	9307      	str	r3, [sp, #28]
 8000a7c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000a80:	931a      	str	r3, [sp, #104]	@ 0x68
 8000a82:	4654      	mov	r4, sl
 8000a84:	2205      	movs	r2, #5
 8000a86:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a8a:	4853      	ldr	r0, [pc, #332]	@ (8000bd8 <_vfiprintf_r+0x21c>)
 8000a8c:	f7ff fba8 	bl	80001e0 <memchr>
 8000a90:	9a04      	ldr	r2, [sp, #16]
 8000a92:	b9d8      	cbnz	r0, 8000acc <_vfiprintf_r+0x110>
 8000a94:	06d1      	lsls	r1, r2, #27
 8000a96:	bf44      	itt	mi
 8000a98:	2320      	movmi	r3, #32
 8000a9a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000a9e:	0713      	lsls	r3, r2, #28
 8000aa0:	bf44      	itt	mi
 8000aa2:	232b      	movmi	r3, #43	@ 0x2b
 8000aa4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000aa8:	f89a 3000 	ldrb.w	r3, [sl]
 8000aac:	2b2a      	cmp	r3, #42	@ 0x2a
 8000aae:	d015      	beq.n	8000adc <_vfiprintf_r+0x120>
 8000ab0:	9a07      	ldr	r2, [sp, #28]
 8000ab2:	4654      	mov	r4, sl
 8000ab4:	2000      	movs	r0, #0
 8000ab6:	f04f 0c0a 	mov.w	ip, #10
 8000aba:	4621      	mov	r1, r4
 8000abc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000ac0:	3b30      	subs	r3, #48	@ 0x30
 8000ac2:	2b09      	cmp	r3, #9
 8000ac4:	d94b      	bls.n	8000b5e <_vfiprintf_r+0x1a2>
 8000ac6:	b1b0      	cbz	r0, 8000af6 <_vfiprintf_r+0x13a>
 8000ac8:	9207      	str	r2, [sp, #28]
 8000aca:	e014      	b.n	8000af6 <_vfiprintf_r+0x13a>
 8000acc:	eba0 0308 	sub.w	r3, r0, r8
 8000ad0:	fa09 f303 	lsl.w	r3, r9, r3
 8000ad4:	4313      	orrs	r3, r2
 8000ad6:	9304      	str	r3, [sp, #16]
 8000ad8:	46a2      	mov	sl, r4
 8000ada:	e7d2      	b.n	8000a82 <_vfiprintf_r+0xc6>
 8000adc:	9b03      	ldr	r3, [sp, #12]
 8000ade:	1d19      	adds	r1, r3, #4
 8000ae0:	681b      	ldr	r3, [r3, #0]
 8000ae2:	9103      	str	r1, [sp, #12]
 8000ae4:	2b00      	cmp	r3, #0
 8000ae6:	bfbb      	ittet	lt
 8000ae8:	425b      	neglt	r3, r3
 8000aea:	f042 0202 	orrlt.w	r2, r2, #2
 8000aee:	9307      	strge	r3, [sp, #28]
 8000af0:	9307      	strlt	r3, [sp, #28]
 8000af2:	bfb8      	it	lt
 8000af4:	9204      	strlt	r2, [sp, #16]
 8000af6:	7823      	ldrb	r3, [r4, #0]
 8000af8:	2b2e      	cmp	r3, #46	@ 0x2e
 8000afa:	d10a      	bne.n	8000b12 <_vfiprintf_r+0x156>
 8000afc:	7863      	ldrb	r3, [r4, #1]
 8000afe:	2b2a      	cmp	r3, #42	@ 0x2a
 8000b00:	d132      	bne.n	8000b68 <_vfiprintf_r+0x1ac>
 8000b02:	9b03      	ldr	r3, [sp, #12]
 8000b04:	1d1a      	adds	r2, r3, #4
 8000b06:	681b      	ldr	r3, [r3, #0]
 8000b08:	9203      	str	r2, [sp, #12]
 8000b0a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000b0e:	3402      	adds	r4, #2
 8000b10:	9305      	str	r3, [sp, #20]
 8000b12:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8000be8 <_vfiprintf_r+0x22c>
 8000b16:	7821      	ldrb	r1, [r4, #0]
 8000b18:	2203      	movs	r2, #3
 8000b1a:	4650      	mov	r0, sl
 8000b1c:	f7ff fb60 	bl	80001e0 <memchr>
 8000b20:	b138      	cbz	r0, 8000b32 <_vfiprintf_r+0x176>
 8000b22:	9b04      	ldr	r3, [sp, #16]
 8000b24:	eba0 000a 	sub.w	r0, r0, sl
 8000b28:	2240      	movs	r2, #64	@ 0x40
 8000b2a:	4082      	lsls	r2, r0
 8000b2c:	4313      	orrs	r3, r2
 8000b2e:	3401      	adds	r4, #1
 8000b30:	9304      	str	r3, [sp, #16]
 8000b32:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b36:	4829      	ldr	r0, [pc, #164]	@ (8000bdc <_vfiprintf_r+0x220>)
 8000b38:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000b3c:	2206      	movs	r2, #6
 8000b3e:	f7ff fb4f 	bl	80001e0 <memchr>
 8000b42:	2800      	cmp	r0, #0
 8000b44:	d03f      	beq.n	8000bc6 <_vfiprintf_r+0x20a>
 8000b46:	4b26      	ldr	r3, [pc, #152]	@ (8000be0 <_vfiprintf_r+0x224>)
 8000b48:	bb1b      	cbnz	r3, 8000b92 <_vfiprintf_r+0x1d6>
 8000b4a:	9b03      	ldr	r3, [sp, #12]
 8000b4c:	3307      	adds	r3, #7
 8000b4e:	f023 0307 	bic.w	r3, r3, #7
 8000b52:	3308      	adds	r3, #8
 8000b54:	9303      	str	r3, [sp, #12]
 8000b56:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000b58:	443b      	add	r3, r7
 8000b5a:	9309      	str	r3, [sp, #36]	@ 0x24
 8000b5c:	e76a      	b.n	8000a34 <_vfiprintf_r+0x78>
 8000b5e:	fb0c 3202 	mla	r2, ip, r2, r3
 8000b62:	460c      	mov	r4, r1
 8000b64:	2001      	movs	r0, #1
 8000b66:	e7a8      	b.n	8000aba <_vfiprintf_r+0xfe>
 8000b68:	2300      	movs	r3, #0
 8000b6a:	3401      	adds	r4, #1
 8000b6c:	9305      	str	r3, [sp, #20]
 8000b6e:	4619      	mov	r1, r3
 8000b70:	f04f 0c0a 	mov.w	ip, #10
 8000b74:	4620      	mov	r0, r4
 8000b76:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000b7a:	3a30      	subs	r2, #48	@ 0x30
 8000b7c:	2a09      	cmp	r2, #9
 8000b7e:	d903      	bls.n	8000b88 <_vfiprintf_r+0x1cc>
 8000b80:	2b00      	cmp	r3, #0
 8000b82:	d0c6      	beq.n	8000b12 <_vfiprintf_r+0x156>
 8000b84:	9105      	str	r1, [sp, #20]
 8000b86:	e7c4      	b.n	8000b12 <_vfiprintf_r+0x156>
 8000b88:	fb0c 2101 	mla	r1, ip, r1, r2
 8000b8c:	4604      	mov	r4, r0
 8000b8e:	2301      	movs	r3, #1
 8000b90:	e7f0      	b.n	8000b74 <_vfiprintf_r+0x1b8>
 8000b92:	ab03      	add	r3, sp, #12
 8000b94:	9300      	str	r3, [sp, #0]
 8000b96:	462a      	mov	r2, r5
 8000b98:	4b12      	ldr	r3, [pc, #72]	@ (8000be4 <_vfiprintf_r+0x228>)
 8000b9a:	a904      	add	r1, sp, #16
 8000b9c:	4630      	mov	r0, r6
 8000b9e:	f3af 8000 	nop.w
 8000ba2:	4607      	mov	r7, r0
 8000ba4:	1c78      	adds	r0, r7, #1
 8000ba6:	d1d6      	bne.n	8000b56 <_vfiprintf_r+0x19a>
 8000ba8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000baa:	07d9      	lsls	r1, r3, #31
 8000bac:	d405      	bmi.n	8000bba <_vfiprintf_r+0x1fe>
 8000bae:	89ab      	ldrh	r3, [r5, #12]
 8000bb0:	059a      	lsls	r2, r3, #22
 8000bb2:	d402      	bmi.n	8000bba <_vfiprintf_r+0x1fe>
 8000bb4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000bb6:	f7ff fddd 	bl	8000774 <__retarget_lock_release_recursive>
 8000bba:	89ab      	ldrh	r3, [r5, #12]
 8000bbc:	065b      	lsls	r3, r3, #25
 8000bbe:	f53f af1f 	bmi.w	8000a00 <_vfiprintf_r+0x44>
 8000bc2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000bc4:	e71e      	b.n	8000a04 <_vfiprintf_r+0x48>
 8000bc6:	ab03      	add	r3, sp, #12
 8000bc8:	9300      	str	r3, [sp, #0]
 8000bca:	462a      	mov	r2, r5
 8000bcc:	4b05      	ldr	r3, [pc, #20]	@ (8000be4 <_vfiprintf_r+0x228>)
 8000bce:	a904      	add	r1, sp, #16
 8000bd0:	4630      	mov	r0, r6
 8000bd2:	f000 f879 	bl	8000cc8 <_printf_i>
 8000bd6:	e7e4      	b.n	8000ba2 <_vfiprintf_r+0x1e6>
 8000bd8:	080012d5 	.word	0x080012d5
 8000bdc:	080012df 	.word	0x080012df
 8000be0:	00000000 	.word	0x00000000
 8000be4:	08000997 	.word	0x08000997
 8000be8:	080012db 	.word	0x080012db

08000bec <_printf_common>:
 8000bec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bf0:	4616      	mov	r6, r2
 8000bf2:	4698      	mov	r8, r3
 8000bf4:	688a      	ldr	r2, [r1, #8]
 8000bf6:	690b      	ldr	r3, [r1, #16]
 8000bf8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000bfc:	4293      	cmp	r3, r2
 8000bfe:	bfb8      	it	lt
 8000c00:	4613      	movlt	r3, r2
 8000c02:	6033      	str	r3, [r6, #0]
 8000c04:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000c08:	4607      	mov	r7, r0
 8000c0a:	460c      	mov	r4, r1
 8000c0c:	b10a      	cbz	r2, 8000c12 <_printf_common+0x26>
 8000c0e:	3301      	adds	r3, #1
 8000c10:	6033      	str	r3, [r6, #0]
 8000c12:	6823      	ldr	r3, [r4, #0]
 8000c14:	0699      	lsls	r1, r3, #26
 8000c16:	bf42      	ittt	mi
 8000c18:	6833      	ldrmi	r3, [r6, #0]
 8000c1a:	3302      	addmi	r3, #2
 8000c1c:	6033      	strmi	r3, [r6, #0]
 8000c1e:	6825      	ldr	r5, [r4, #0]
 8000c20:	f015 0506 	ands.w	r5, r5, #6
 8000c24:	d106      	bne.n	8000c34 <_printf_common+0x48>
 8000c26:	f104 0a19 	add.w	sl, r4, #25
 8000c2a:	68e3      	ldr	r3, [r4, #12]
 8000c2c:	6832      	ldr	r2, [r6, #0]
 8000c2e:	1a9b      	subs	r3, r3, r2
 8000c30:	42ab      	cmp	r3, r5
 8000c32:	dc26      	bgt.n	8000c82 <_printf_common+0x96>
 8000c34:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000c38:	6822      	ldr	r2, [r4, #0]
 8000c3a:	3b00      	subs	r3, #0
 8000c3c:	bf18      	it	ne
 8000c3e:	2301      	movne	r3, #1
 8000c40:	0692      	lsls	r2, r2, #26
 8000c42:	d42b      	bmi.n	8000c9c <_printf_common+0xb0>
 8000c44:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000c48:	4641      	mov	r1, r8
 8000c4a:	4638      	mov	r0, r7
 8000c4c:	47c8      	blx	r9
 8000c4e:	3001      	adds	r0, #1
 8000c50:	d01e      	beq.n	8000c90 <_printf_common+0xa4>
 8000c52:	6823      	ldr	r3, [r4, #0]
 8000c54:	6922      	ldr	r2, [r4, #16]
 8000c56:	f003 0306 	and.w	r3, r3, #6
 8000c5a:	2b04      	cmp	r3, #4
 8000c5c:	bf02      	ittt	eq
 8000c5e:	68e5      	ldreq	r5, [r4, #12]
 8000c60:	6833      	ldreq	r3, [r6, #0]
 8000c62:	1aed      	subeq	r5, r5, r3
 8000c64:	68a3      	ldr	r3, [r4, #8]
 8000c66:	bf0c      	ite	eq
 8000c68:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c6c:	2500      	movne	r5, #0
 8000c6e:	4293      	cmp	r3, r2
 8000c70:	bfc4      	itt	gt
 8000c72:	1a9b      	subgt	r3, r3, r2
 8000c74:	18ed      	addgt	r5, r5, r3
 8000c76:	2600      	movs	r6, #0
 8000c78:	341a      	adds	r4, #26
 8000c7a:	42b5      	cmp	r5, r6
 8000c7c:	d11a      	bne.n	8000cb4 <_printf_common+0xc8>
 8000c7e:	2000      	movs	r0, #0
 8000c80:	e008      	b.n	8000c94 <_printf_common+0xa8>
 8000c82:	2301      	movs	r3, #1
 8000c84:	4652      	mov	r2, sl
 8000c86:	4641      	mov	r1, r8
 8000c88:	4638      	mov	r0, r7
 8000c8a:	47c8      	blx	r9
 8000c8c:	3001      	adds	r0, #1
 8000c8e:	d103      	bne.n	8000c98 <_printf_common+0xac>
 8000c90:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000c94:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c98:	3501      	adds	r5, #1
 8000c9a:	e7c6      	b.n	8000c2a <_printf_common+0x3e>
 8000c9c:	18e1      	adds	r1, r4, r3
 8000c9e:	1c5a      	adds	r2, r3, #1
 8000ca0:	2030      	movs	r0, #48	@ 0x30
 8000ca2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000ca6:	4422      	add	r2, r4
 8000ca8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000cac:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000cb0:	3302      	adds	r3, #2
 8000cb2:	e7c7      	b.n	8000c44 <_printf_common+0x58>
 8000cb4:	2301      	movs	r3, #1
 8000cb6:	4622      	mov	r2, r4
 8000cb8:	4641      	mov	r1, r8
 8000cba:	4638      	mov	r0, r7
 8000cbc:	47c8      	blx	r9
 8000cbe:	3001      	adds	r0, #1
 8000cc0:	d0e6      	beq.n	8000c90 <_printf_common+0xa4>
 8000cc2:	3601      	adds	r6, #1
 8000cc4:	e7d9      	b.n	8000c7a <_printf_common+0x8e>
	...

08000cc8 <_printf_i>:
 8000cc8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000ccc:	7e0f      	ldrb	r7, [r1, #24]
 8000cce:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000cd0:	2f78      	cmp	r7, #120	@ 0x78
 8000cd2:	4691      	mov	r9, r2
 8000cd4:	4680      	mov	r8, r0
 8000cd6:	460c      	mov	r4, r1
 8000cd8:	469a      	mov	sl, r3
 8000cda:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000cde:	d807      	bhi.n	8000cf0 <_printf_i+0x28>
 8000ce0:	2f62      	cmp	r7, #98	@ 0x62
 8000ce2:	d80a      	bhi.n	8000cfa <_printf_i+0x32>
 8000ce4:	2f00      	cmp	r7, #0
 8000ce6:	f000 80d2 	beq.w	8000e8e <_printf_i+0x1c6>
 8000cea:	2f58      	cmp	r7, #88	@ 0x58
 8000cec:	f000 80b9 	beq.w	8000e62 <_printf_i+0x19a>
 8000cf0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000cf4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000cf8:	e03a      	b.n	8000d70 <_printf_i+0xa8>
 8000cfa:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000cfe:	2b15      	cmp	r3, #21
 8000d00:	d8f6      	bhi.n	8000cf0 <_printf_i+0x28>
 8000d02:	a101      	add	r1, pc, #4	@ (adr r1, 8000d08 <_printf_i+0x40>)
 8000d04:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000d08:	08000d61 	.word	0x08000d61
 8000d0c:	08000d75 	.word	0x08000d75
 8000d10:	08000cf1 	.word	0x08000cf1
 8000d14:	08000cf1 	.word	0x08000cf1
 8000d18:	08000cf1 	.word	0x08000cf1
 8000d1c:	08000cf1 	.word	0x08000cf1
 8000d20:	08000d75 	.word	0x08000d75
 8000d24:	08000cf1 	.word	0x08000cf1
 8000d28:	08000cf1 	.word	0x08000cf1
 8000d2c:	08000cf1 	.word	0x08000cf1
 8000d30:	08000cf1 	.word	0x08000cf1
 8000d34:	08000e75 	.word	0x08000e75
 8000d38:	08000d9f 	.word	0x08000d9f
 8000d3c:	08000e2f 	.word	0x08000e2f
 8000d40:	08000cf1 	.word	0x08000cf1
 8000d44:	08000cf1 	.word	0x08000cf1
 8000d48:	08000e97 	.word	0x08000e97
 8000d4c:	08000cf1 	.word	0x08000cf1
 8000d50:	08000d9f 	.word	0x08000d9f
 8000d54:	08000cf1 	.word	0x08000cf1
 8000d58:	08000cf1 	.word	0x08000cf1
 8000d5c:	08000e37 	.word	0x08000e37
 8000d60:	6833      	ldr	r3, [r6, #0]
 8000d62:	1d1a      	adds	r2, r3, #4
 8000d64:	681b      	ldr	r3, [r3, #0]
 8000d66:	6032      	str	r2, [r6, #0]
 8000d68:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000d6c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000d70:	2301      	movs	r3, #1
 8000d72:	e09d      	b.n	8000eb0 <_printf_i+0x1e8>
 8000d74:	6833      	ldr	r3, [r6, #0]
 8000d76:	6820      	ldr	r0, [r4, #0]
 8000d78:	1d19      	adds	r1, r3, #4
 8000d7a:	6031      	str	r1, [r6, #0]
 8000d7c:	0606      	lsls	r6, r0, #24
 8000d7e:	d501      	bpl.n	8000d84 <_printf_i+0xbc>
 8000d80:	681d      	ldr	r5, [r3, #0]
 8000d82:	e003      	b.n	8000d8c <_printf_i+0xc4>
 8000d84:	0645      	lsls	r5, r0, #25
 8000d86:	d5fb      	bpl.n	8000d80 <_printf_i+0xb8>
 8000d88:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000d8c:	2d00      	cmp	r5, #0
 8000d8e:	da03      	bge.n	8000d98 <_printf_i+0xd0>
 8000d90:	232d      	movs	r3, #45	@ 0x2d
 8000d92:	426d      	negs	r5, r5
 8000d94:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000d98:	4859      	ldr	r0, [pc, #356]	@ (8000f00 <_printf_i+0x238>)
 8000d9a:	230a      	movs	r3, #10
 8000d9c:	e011      	b.n	8000dc2 <_printf_i+0xfa>
 8000d9e:	6821      	ldr	r1, [r4, #0]
 8000da0:	6833      	ldr	r3, [r6, #0]
 8000da2:	0608      	lsls	r0, r1, #24
 8000da4:	f853 5b04 	ldr.w	r5, [r3], #4
 8000da8:	d402      	bmi.n	8000db0 <_printf_i+0xe8>
 8000daa:	0649      	lsls	r1, r1, #25
 8000dac:	bf48      	it	mi
 8000dae:	b2ad      	uxthmi	r5, r5
 8000db0:	2f6f      	cmp	r7, #111	@ 0x6f
 8000db2:	4853      	ldr	r0, [pc, #332]	@ (8000f00 <_printf_i+0x238>)
 8000db4:	6033      	str	r3, [r6, #0]
 8000db6:	bf14      	ite	ne
 8000db8:	230a      	movne	r3, #10
 8000dba:	2308      	moveq	r3, #8
 8000dbc:	2100      	movs	r1, #0
 8000dbe:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000dc2:	6866      	ldr	r6, [r4, #4]
 8000dc4:	60a6      	str	r6, [r4, #8]
 8000dc6:	2e00      	cmp	r6, #0
 8000dc8:	bfa2      	ittt	ge
 8000dca:	6821      	ldrge	r1, [r4, #0]
 8000dcc:	f021 0104 	bicge.w	r1, r1, #4
 8000dd0:	6021      	strge	r1, [r4, #0]
 8000dd2:	b90d      	cbnz	r5, 8000dd8 <_printf_i+0x110>
 8000dd4:	2e00      	cmp	r6, #0
 8000dd6:	d04b      	beq.n	8000e70 <_printf_i+0x1a8>
 8000dd8:	4616      	mov	r6, r2
 8000dda:	fbb5 f1f3 	udiv	r1, r5, r3
 8000dde:	fb03 5711 	mls	r7, r3, r1, r5
 8000de2:	5dc7      	ldrb	r7, [r0, r7]
 8000de4:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000de8:	462f      	mov	r7, r5
 8000dea:	42bb      	cmp	r3, r7
 8000dec:	460d      	mov	r5, r1
 8000dee:	d9f4      	bls.n	8000dda <_printf_i+0x112>
 8000df0:	2b08      	cmp	r3, #8
 8000df2:	d10b      	bne.n	8000e0c <_printf_i+0x144>
 8000df4:	6823      	ldr	r3, [r4, #0]
 8000df6:	07df      	lsls	r7, r3, #31
 8000df8:	d508      	bpl.n	8000e0c <_printf_i+0x144>
 8000dfa:	6923      	ldr	r3, [r4, #16]
 8000dfc:	6861      	ldr	r1, [r4, #4]
 8000dfe:	4299      	cmp	r1, r3
 8000e00:	bfde      	ittt	le
 8000e02:	2330      	movle	r3, #48	@ 0x30
 8000e04:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000e08:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8000e0c:	1b92      	subs	r2, r2, r6
 8000e0e:	6122      	str	r2, [r4, #16]
 8000e10:	f8cd a000 	str.w	sl, [sp]
 8000e14:	464b      	mov	r3, r9
 8000e16:	aa03      	add	r2, sp, #12
 8000e18:	4621      	mov	r1, r4
 8000e1a:	4640      	mov	r0, r8
 8000e1c:	f7ff fee6 	bl	8000bec <_printf_common>
 8000e20:	3001      	adds	r0, #1
 8000e22:	d14a      	bne.n	8000eba <_printf_i+0x1f2>
 8000e24:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000e28:	b004      	add	sp, #16
 8000e2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e2e:	6823      	ldr	r3, [r4, #0]
 8000e30:	f043 0320 	orr.w	r3, r3, #32
 8000e34:	6023      	str	r3, [r4, #0]
 8000e36:	4833      	ldr	r0, [pc, #204]	@ (8000f04 <_printf_i+0x23c>)
 8000e38:	2778      	movs	r7, #120	@ 0x78
 8000e3a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000e3e:	6823      	ldr	r3, [r4, #0]
 8000e40:	6831      	ldr	r1, [r6, #0]
 8000e42:	061f      	lsls	r7, r3, #24
 8000e44:	f851 5b04 	ldr.w	r5, [r1], #4
 8000e48:	d402      	bmi.n	8000e50 <_printf_i+0x188>
 8000e4a:	065f      	lsls	r7, r3, #25
 8000e4c:	bf48      	it	mi
 8000e4e:	b2ad      	uxthmi	r5, r5
 8000e50:	6031      	str	r1, [r6, #0]
 8000e52:	07d9      	lsls	r1, r3, #31
 8000e54:	bf44      	itt	mi
 8000e56:	f043 0320 	orrmi.w	r3, r3, #32
 8000e5a:	6023      	strmi	r3, [r4, #0]
 8000e5c:	b11d      	cbz	r5, 8000e66 <_printf_i+0x19e>
 8000e5e:	2310      	movs	r3, #16
 8000e60:	e7ac      	b.n	8000dbc <_printf_i+0xf4>
 8000e62:	4827      	ldr	r0, [pc, #156]	@ (8000f00 <_printf_i+0x238>)
 8000e64:	e7e9      	b.n	8000e3a <_printf_i+0x172>
 8000e66:	6823      	ldr	r3, [r4, #0]
 8000e68:	f023 0320 	bic.w	r3, r3, #32
 8000e6c:	6023      	str	r3, [r4, #0]
 8000e6e:	e7f6      	b.n	8000e5e <_printf_i+0x196>
 8000e70:	4616      	mov	r6, r2
 8000e72:	e7bd      	b.n	8000df0 <_printf_i+0x128>
 8000e74:	6833      	ldr	r3, [r6, #0]
 8000e76:	6825      	ldr	r5, [r4, #0]
 8000e78:	6961      	ldr	r1, [r4, #20]
 8000e7a:	1d18      	adds	r0, r3, #4
 8000e7c:	6030      	str	r0, [r6, #0]
 8000e7e:	062e      	lsls	r6, r5, #24
 8000e80:	681b      	ldr	r3, [r3, #0]
 8000e82:	d501      	bpl.n	8000e88 <_printf_i+0x1c0>
 8000e84:	6019      	str	r1, [r3, #0]
 8000e86:	e002      	b.n	8000e8e <_printf_i+0x1c6>
 8000e88:	0668      	lsls	r0, r5, #25
 8000e8a:	d5fb      	bpl.n	8000e84 <_printf_i+0x1bc>
 8000e8c:	8019      	strh	r1, [r3, #0]
 8000e8e:	2300      	movs	r3, #0
 8000e90:	6123      	str	r3, [r4, #16]
 8000e92:	4616      	mov	r6, r2
 8000e94:	e7bc      	b.n	8000e10 <_printf_i+0x148>
 8000e96:	6833      	ldr	r3, [r6, #0]
 8000e98:	1d1a      	adds	r2, r3, #4
 8000e9a:	6032      	str	r2, [r6, #0]
 8000e9c:	681e      	ldr	r6, [r3, #0]
 8000e9e:	6862      	ldr	r2, [r4, #4]
 8000ea0:	2100      	movs	r1, #0
 8000ea2:	4630      	mov	r0, r6
 8000ea4:	f7ff f99c 	bl	80001e0 <memchr>
 8000ea8:	b108      	cbz	r0, 8000eae <_printf_i+0x1e6>
 8000eaa:	1b80      	subs	r0, r0, r6
 8000eac:	6060      	str	r0, [r4, #4]
 8000eae:	6863      	ldr	r3, [r4, #4]
 8000eb0:	6123      	str	r3, [r4, #16]
 8000eb2:	2300      	movs	r3, #0
 8000eb4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000eb8:	e7aa      	b.n	8000e10 <_printf_i+0x148>
 8000eba:	6923      	ldr	r3, [r4, #16]
 8000ebc:	4632      	mov	r2, r6
 8000ebe:	4649      	mov	r1, r9
 8000ec0:	4640      	mov	r0, r8
 8000ec2:	47d0      	blx	sl
 8000ec4:	3001      	adds	r0, #1
 8000ec6:	d0ad      	beq.n	8000e24 <_printf_i+0x15c>
 8000ec8:	6823      	ldr	r3, [r4, #0]
 8000eca:	079b      	lsls	r3, r3, #30
 8000ecc:	d413      	bmi.n	8000ef6 <_printf_i+0x22e>
 8000ece:	68e0      	ldr	r0, [r4, #12]
 8000ed0:	9b03      	ldr	r3, [sp, #12]
 8000ed2:	4298      	cmp	r0, r3
 8000ed4:	bfb8      	it	lt
 8000ed6:	4618      	movlt	r0, r3
 8000ed8:	e7a6      	b.n	8000e28 <_printf_i+0x160>
 8000eda:	2301      	movs	r3, #1
 8000edc:	4632      	mov	r2, r6
 8000ede:	4649      	mov	r1, r9
 8000ee0:	4640      	mov	r0, r8
 8000ee2:	47d0      	blx	sl
 8000ee4:	3001      	adds	r0, #1
 8000ee6:	d09d      	beq.n	8000e24 <_printf_i+0x15c>
 8000ee8:	3501      	adds	r5, #1
 8000eea:	68e3      	ldr	r3, [r4, #12]
 8000eec:	9903      	ldr	r1, [sp, #12]
 8000eee:	1a5b      	subs	r3, r3, r1
 8000ef0:	42ab      	cmp	r3, r5
 8000ef2:	dcf2      	bgt.n	8000eda <_printf_i+0x212>
 8000ef4:	e7eb      	b.n	8000ece <_printf_i+0x206>
 8000ef6:	2500      	movs	r5, #0
 8000ef8:	f104 0619 	add.w	r6, r4, #25
 8000efc:	e7f5      	b.n	8000eea <_printf_i+0x222>
 8000efe:	bf00      	nop
 8000f00:	080012e6 	.word	0x080012e6
 8000f04:	080012f7 	.word	0x080012f7

08000f08 <__sflush_r>:
 8000f08:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000f0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f10:	0716      	lsls	r6, r2, #28
 8000f12:	4605      	mov	r5, r0
 8000f14:	460c      	mov	r4, r1
 8000f16:	d454      	bmi.n	8000fc2 <__sflush_r+0xba>
 8000f18:	684b      	ldr	r3, [r1, #4]
 8000f1a:	2b00      	cmp	r3, #0
 8000f1c:	dc02      	bgt.n	8000f24 <__sflush_r+0x1c>
 8000f1e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000f20:	2b00      	cmp	r3, #0
 8000f22:	dd48      	ble.n	8000fb6 <__sflush_r+0xae>
 8000f24:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000f26:	2e00      	cmp	r6, #0
 8000f28:	d045      	beq.n	8000fb6 <__sflush_r+0xae>
 8000f2a:	2300      	movs	r3, #0
 8000f2c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000f30:	682f      	ldr	r7, [r5, #0]
 8000f32:	6a21      	ldr	r1, [r4, #32]
 8000f34:	602b      	str	r3, [r5, #0]
 8000f36:	d030      	beq.n	8000f9a <__sflush_r+0x92>
 8000f38:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000f3a:	89a3      	ldrh	r3, [r4, #12]
 8000f3c:	0759      	lsls	r1, r3, #29
 8000f3e:	d505      	bpl.n	8000f4c <__sflush_r+0x44>
 8000f40:	6863      	ldr	r3, [r4, #4]
 8000f42:	1ad2      	subs	r2, r2, r3
 8000f44:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000f46:	b10b      	cbz	r3, 8000f4c <__sflush_r+0x44>
 8000f48:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000f4a:	1ad2      	subs	r2, r2, r3
 8000f4c:	2300      	movs	r3, #0
 8000f4e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000f50:	6a21      	ldr	r1, [r4, #32]
 8000f52:	4628      	mov	r0, r5
 8000f54:	47b0      	blx	r6
 8000f56:	1c43      	adds	r3, r0, #1
 8000f58:	89a3      	ldrh	r3, [r4, #12]
 8000f5a:	d106      	bne.n	8000f6a <__sflush_r+0x62>
 8000f5c:	6829      	ldr	r1, [r5, #0]
 8000f5e:	291d      	cmp	r1, #29
 8000f60:	d82b      	bhi.n	8000fba <__sflush_r+0xb2>
 8000f62:	4a2a      	ldr	r2, [pc, #168]	@ (800100c <__sflush_r+0x104>)
 8000f64:	410a      	asrs	r2, r1
 8000f66:	07d6      	lsls	r6, r2, #31
 8000f68:	d427      	bmi.n	8000fba <__sflush_r+0xb2>
 8000f6a:	2200      	movs	r2, #0
 8000f6c:	6062      	str	r2, [r4, #4]
 8000f6e:	04d9      	lsls	r1, r3, #19
 8000f70:	6922      	ldr	r2, [r4, #16]
 8000f72:	6022      	str	r2, [r4, #0]
 8000f74:	d504      	bpl.n	8000f80 <__sflush_r+0x78>
 8000f76:	1c42      	adds	r2, r0, #1
 8000f78:	d101      	bne.n	8000f7e <__sflush_r+0x76>
 8000f7a:	682b      	ldr	r3, [r5, #0]
 8000f7c:	b903      	cbnz	r3, 8000f80 <__sflush_r+0x78>
 8000f7e:	6560      	str	r0, [r4, #84]	@ 0x54
 8000f80:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000f82:	602f      	str	r7, [r5, #0]
 8000f84:	b1b9      	cbz	r1, 8000fb6 <__sflush_r+0xae>
 8000f86:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000f8a:	4299      	cmp	r1, r3
 8000f8c:	d002      	beq.n	8000f94 <__sflush_r+0x8c>
 8000f8e:	4628      	mov	r0, r5
 8000f90:	f7ff fbf2 	bl	8000778 <_free_r>
 8000f94:	2300      	movs	r3, #0
 8000f96:	6363      	str	r3, [r4, #52]	@ 0x34
 8000f98:	e00d      	b.n	8000fb6 <__sflush_r+0xae>
 8000f9a:	2301      	movs	r3, #1
 8000f9c:	4628      	mov	r0, r5
 8000f9e:	47b0      	blx	r6
 8000fa0:	4602      	mov	r2, r0
 8000fa2:	1c50      	adds	r0, r2, #1
 8000fa4:	d1c9      	bne.n	8000f3a <__sflush_r+0x32>
 8000fa6:	682b      	ldr	r3, [r5, #0]
 8000fa8:	2b00      	cmp	r3, #0
 8000faa:	d0c6      	beq.n	8000f3a <__sflush_r+0x32>
 8000fac:	2b1d      	cmp	r3, #29
 8000fae:	d001      	beq.n	8000fb4 <__sflush_r+0xac>
 8000fb0:	2b16      	cmp	r3, #22
 8000fb2:	d11e      	bne.n	8000ff2 <__sflush_r+0xea>
 8000fb4:	602f      	str	r7, [r5, #0]
 8000fb6:	2000      	movs	r0, #0
 8000fb8:	e022      	b.n	8001000 <__sflush_r+0xf8>
 8000fba:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000fbe:	b21b      	sxth	r3, r3
 8000fc0:	e01b      	b.n	8000ffa <__sflush_r+0xf2>
 8000fc2:	690f      	ldr	r7, [r1, #16]
 8000fc4:	2f00      	cmp	r7, #0
 8000fc6:	d0f6      	beq.n	8000fb6 <__sflush_r+0xae>
 8000fc8:	0793      	lsls	r3, r2, #30
 8000fca:	680e      	ldr	r6, [r1, #0]
 8000fcc:	bf08      	it	eq
 8000fce:	694b      	ldreq	r3, [r1, #20]
 8000fd0:	600f      	str	r7, [r1, #0]
 8000fd2:	bf18      	it	ne
 8000fd4:	2300      	movne	r3, #0
 8000fd6:	eba6 0807 	sub.w	r8, r6, r7
 8000fda:	608b      	str	r3, [r1, #8]
 8000fdc:	f1b8 0f00 	cmp.w	r8, #0
 8000fe0:	dde9      	ble.n	8000fb6 <__sflush_r+0xae>
 8000fe2:	6a21      	ldr	r1, [r4, #32]
 8000fe4:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8000fe6:	4643      	mov	r3, r8
 8000fe8:	463a      	mov	r2, r7
 8000fea:	4628      	mov	r0, r5
 8000fec:	47b0      	blx	r6
 8000fee:	2800      	cmp	r0, #0
 8000ff0:	dc08      	bgt.n	8001004 <__sflush_r+0xfc>
 8000ff2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000ff6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000ffa:	81a3      	strh	r3, [r4, #12]
 8000ffc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001000:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001004:	4407      	add	r7, r0
 8001006:	eba8 0800 	sub.w	r8, r8, r0
 800100a:	e7e7      	b.n	8000fdc <__sflush_r+0xd4>
 800100c:	dfbffffe 	.word	0xdfbffffe

08001010 <_fflush_r>:
 8001010:	b538      	push	{r3, r4, r5, lr}
 8001012:	690b      	ldr	r3, [r1, #16]
 8001014:	4605      	mov	r5, r0
 8001016:	460c      	mov	r4, r1
 8001018:	b913      	cbnz	r3, 8001020 <_fflush_r+0x10>
 800101a:	2500      	movs	r5, #0
 800101c:	4628      	mov	r0, r5
 800101e:	bd38      	pop	{r3, r4, r5, pc}
 8001020:	b118      	cbz	r0, 800102a <_fflush_r+0x1a>
 8001022:	6a03      	ldr	r3, [r0, #32]
 8001024:	b90b      	cbnz	r3, 800102a <_fflush_r+0x1a>
 8001026:	f7ff fa9f 	bl	8000568 <__sinit>
 800102a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800102e:	2b00      	cmp	r3, #0
 8001030:	d0f3      	beq.n	800101a <_fflush_r+0xa>
 8001032:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001034:	07d0      	lsls	r0, r2, #31
 8001036:	d404      	bmi.n	8001042 <_fflush_r+0x32>
 8001038:	0599      	lsls	r1, r3, #22
 800103a:	d402      	bmi.n	8001042 <_fflush_r+0x32>
 800103c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800103e:	f7ff fb98 	bl	8000772 <__retarget_lock_acquire_recursive>
 8001042:	4628      	mov	r0, r5
 8001044:	4621      	mov	r1, r4
 8001046:	f7ff ff5f 	bl	8000f08 <__sflush_r>
 800104a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800104c:	07da      	lsls	r2, r3, #31
 800104e:	4605      	mov	r5, r0
 8001050:	d4e4      	bmi.n	800101c <_fflush_r+0xc>
 8001052:	89a3      	ldrh	r3, [r4, #12]
 8001054:	059b      	lsls	r3, r3, #22
 8001056:	d4e1      	bmi.n	800101c <_fflush_r+0xc>
 8001058:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800105a:	f7ff fb8b 	bl	8000774 <__retarget_lock_release_recursive>
 800105e:	e7dd      	b.n	800101c <_fflush_r+0xc>

08001060 <__swbuf_r>:
 8001060:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001062:	460e      	mov	r6, r1
 8001064:	4614      	mov	r4, r2
 8001066:	4605      	mov	r5, r0
 8001068:	b118      	cbz	r0, 8001072 <__swbuf_r+0x12>
 800106a:	6a03      	ldr	r3, [r0, #32]
 800106c:	b90b      	cbnz	r3, 8001072 <__swbuf_r+0x12>
 800106e:	f7ff fa7b 	bl	8000568 <__sinit>
 8001072:	69a3      	ldr	r3, [r4, #24]
 8001074:	60a3      	str	r3, [r4, #8]
 8001076:	89a3      	ldrh	r3, [r4, #12]
 8001078:	071a      	lsls	r2, r3, #28
 800107a:	d501      	bpl.n	8001080 <__swbuf_r+0x20>
 800107c:	6923      	ldr	r3, [r4, #16]
 800107e:	b943      	cbnz	r3, 8001092 <__swbuf_r+0x32>
 8001080:	4621      	mov	r1, r4
 8001082:	4628      	mov	r0, r5
 8001084:	f000 f82a 	bl	80010dc <__swsetup_r>
 8001088:	b118      	cbz	r0, 8001092 <__swbuf_r+0x32>
 800108a:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 800108e:	4638      	mov	r0, r7
 8001090:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001092:	6823      	ldr	r3, [r4, #0]
 8001094:	6922      	ldr	r2, [r4, #16]
 8001096:	1a98      	subs	r0, r3, r2
 8001098:	6963      	ldr	r3, [r4, #20]
 800109a:	b2f6      	uxtb	r6, r6
 800109c:	4283      	cmp	r3, r0
 800109e:	4637      	mov	r7, r6
 80010a0:	dc05      	bgt.n	80010ae <__swbuf_r+0x4e>
 80010a2:	4621      	mov	r1, r4
 80010a4:	4628      	mov	r0, r5
 80010a6:	f7ff ffb3 	bl	8001010 <_fflush_r>
 80010aa:	2800      	cmp	r0, #0
 80010ac:	d1ed      	bne.n	800108a <__swbuf_r+0x2a>
 80010ae:	68a3      	ldr	r3, [r4, #8]
 80010b0:	3b01      	subs	r3, #1
 80010b2:	60a3      	str	r3, [r4, #8]
 80010b4:	6823      	ldr	r3, [r4, #0]
 80010b6:	1c5a      	adds	r2, r3, #1
 80010b8:	6022      	str	r2, [r4, #0]
 80010ba:	701e      	strb	r6, [r3, #0]
 80010bc:	6962      	ldr	r2, [r4, #20]
 80010be:	1c43      	adds	r3, r0, #1
 80010c0:	429a      	cmp	r2, r3
 80010c2:	d004      	beq.n	80010ce <__swbuf_r+0x6e>
 80010c4:	89a3      	ldrh	r3, [r4, #12]
 80010c6:	07db      	lsls	r3, r3, #31
 80010c8:	d5e1      	bpl.n	800108e <__swbuf_r+0x2e>
 80010ca:	2e0a      	cmp	r6, #10
 80010cc:	d1df      	bne.n	800108e <__swbuf_r+0x2e>
 80010ce:	4621      	mov	r1, r4
 80010d0:	4628      	mov	r0, r5
 80010d2:	f7ff ff9d 	bl	8001010 <_fflush_r>
 80010d6:	2800      	cmp	r0, #0
 80010d8:	d0d9      	beq.n	800108e <__swbuf_r+0x2e>
 80010da:	e7d6      	b.n	800108a <__swbuf_r+0x2a>

080010dc <__swsetup_r>:
 80010dc:	b538      	push	{r3, r4, r5, lr}
 80010de:	4b29      	ldr	r3, [pc, #164]	@ (8001184 <__swsetup_r+0xa8>)
 80010e0:	4605      	mov	r5, r0
 80010e2:	6818      	ldr	r0, [r3, #0]
 80010e4:	460c      	mov	r4, r1
 80010e6:	b118      	cbz	r0, 80010f0 <__swsetup_r+0x14>
 80010e8:	6a03      	ldr	r3, [r0, #32]
 80010ea:	b90b      	cbnz	r3, 80010f0 <__swsetup_r+0x14>
 80010ec:	f7ff fa3c 	bl	8000568 <__sinit>
 80010f0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010f4:	0719      	lsls	r1, r3, #28
 80010f6:	d422      	bmi.n	800113e <__swsetup_r+0x62>
 80010f8:	06da      	lsls	r2, r3, #27
 80010fa:	d407      	bmi.n	800110c <__swsetup_r+0x30>
 80010fc:	2209      	movs	r2, #9
 80010fe:	602a      	str	r2, [r5, #0]
 8001100:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001104:	81a3      	strh	r3, [r4, #12]
 8001106:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800110a:	e033      	b.n	8001174 <__swsetup_r+0x98>
 800110c:	0758      	lsls	r0, r3, #29
 800110e:	d512      	bpl.n	8001136 <__swsetup_r+0x5a>
 8001110:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001112:	b141      	cbz	r1, 8001126 <__swsetup_r+0x4a>
 8001114:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001118:	4299      	cmp	r1, r3
 800111a:	d002      	beq.n	8001122 <__swsetup_r+0x46>
 800111c:	4628      	mov	r0, r5
 800111e:	f7ff fb2b 	bl	8000778 <_free_r>
 8001122:	2300      	movs	r3, #0
 8001124:	6363      	str	r3, [r4, #52]	@ 0x34
 8001126:	89a3      	ldrh	r3, [r4, #12]
 8001128:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800112c:	81a3      	strh	r3, [r4, #12]
 800112e:	2300      	movs	r3, #0
 8001130:	6063      	str	r3, [r4, #4]
 8001132:	6923      	ldr	r3, [r4, #16]
 8001134:	6023      	str	r3, [r4, #0]
 8001136:	89a3      	ldrh	r3, [r4, #12]
 8001138:	f043 0308 	orr.w	r3, r3, #8
 800113c:	81a3      	strh	r3, [r4, #12]
 800113e:	6923      	ldr	r3, [r4, #16]
 8001140:	b94b      	cbnz	r3, 8001156 <__swsetup_r+0x7a>
 8001142:	89a3      	ldrh	r3, [r4, #12]
 8001144:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8001148:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800114c:	d003      	beq.n	8001156 <__swsetup_r+0x7a>
 800114e:	4621      	mov	r1, r4
 8001150:	4628      	mov	r0, r5
 8001152:	f000 f84f 	bl	80011f4 <__smakebuf_r>
 8001156:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800115a:	f013 0201 	ands.w	r2, r3, #1
 800115e:	d00a      	beq.n	8001176 <__swsetup_r+0x9a>
 8001160:	2200      	movs	r2, #0
 8001162:	60a2      	str	r2, [r4, #8]
 8001164:	6962      	ldr	r2, [r4, #20]
 8001166:	4252      	negs	r2, r2
 8001168:	61a2      	str	r2, [r4, #24]
 800116a:	6922      	ldr	r2, [r4, #16]
 800116c:	b942      	cbnz	r2, 8001180 <__swsetup_r+0xa4>
 800116e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8001172:	d1c5      	bne.n	8001100 <__swsetup_r+0x24>
 8001174:	bd38      	pop	{r3, r4, r5, pc}
 8001176:	0799      	lsls	r1, r3, #30
 8001178:	bf58      	it	pl
 800117a:	6962      	ldrpl	r2, [r4, #20]
 800117c:	60a2      	str	r2, [r4, #8]
 800117e:	e7f4      	b.n	800116a <__swsetup_r+0x8e>
 8001180:	2000      	movs	r0, #0
 8001182:	e7f7      	b.n	8001174 <__swsetup_r+0x98>
 8001184:	20000014 	.word	0x20000014

08001188 <_sbrk_r>:
 8001188:	b538      	push	{r3, r4, r5, lr}
 800118a:	4d06      	ldr	r5, [pc, #24]	@ (80011a4 <_sbrk_r+0x1c>)
 800118c:	2300      	movs	r3, #0
 800118e:	4604      	mov	r4, r0
 8001190:	4608      	mov	r0, r1
 8001192:	602b      	str	r3, [r5, #0]
 8001194:	f7ff f8fc 	bl	8000390 <_sbrk>
 8001198:	1c43      	adds	r3, r0, #1
 800119a:	d102      	bne.n	80011a2 <_sbrk_r+0x1a>
 800119c:	682b      	ldr	r3, [r5, #0]
 800119e:	b103      	cbz	r3, 80011a2 <_sbrk_r+0x1a>
 80011a0:	6023      	str	r3, [r4, #0]
 80011a2:	bd38      	pop	{r3, r4, r5, pc}
 80011a4:	200001c4 	.word	0x200001c4

080011a8 <__swhatbuf_r>:
 80011a8:	b570      	push	{r4, r5, r6, lr}
 80011aa:	460c      	mov	r4, r1
 80011ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011b0:	2900      	cmp	r1, #0
 80011b2:	b096      	sub	sp, #88	@ 0x58
 80011b4:	4615      	mov	r5, r2
 80011b6:	461e      	mov	r6, r3
 80011b8:	da0d      	bge.n	80011d6 <__swhatbuf_r+0x2e>
 80011ba:	89a3      	ldrh	r3, [r4, #12]
 80011bc:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80011c0:	f04f 0100 	mov.w	r1, #0
 80011c4:	bf14      	ite	ne
 80011c6:	2340      	movne	r3, #64	@ 0x40
 80011c8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80011cc:	2000      	movs	r0, #0
 80011ce:	6031      	str	r1, [r6, #0]
 80011d0:	602b      	str	r3, [r5, #0]
 80011d2:	b016      	add	sp, #88	@ 0x58
 80011d4:	bd70      	pop	{r4, r5, r6, pc}
 80011d6:	466a      	mov	r2, sp
 80011d8:	f000 f848 	bl	800126c <_fstat_r>
 80011dc:	2800      	cmp	r0, #0
 80011de:	dbec      	blt.n	80011ba <__swhatbuf_r+0x12>
 80011e0:	9901      	ldr	r1, [sp, #4]
 80011e2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80011e6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80011ea:	4259      	negs	r1, r3
 80011ec:	4159      	adcs	r1, r3
 80011ee:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80011f2:	e7eb      	b.n	80011cc <__swhatbuf_r+0x24>

080011f4 <__smakebuf_r>:
 80011f4:	898b      	ldrh	r3, [r1, #12]
 80011f6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80011f8:	079d      	lsls	r5, r3, #30
 80011fa:	4606      	mov	r6, r0
 80011fc:	460c      	mov	r4, r1
 80011fe:	d507      	bpl.n	8001210 <__smakebuf_r+0x1c>
 8001200:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001204:	6023      	str	r3, [r4, #0]
 8001206:	6123      	str	r3, [r4, #16]
 8001208:	2301      	movs	r3, #1
 800120a:	6163      	str	r3, [r4, #20]
 800120c:	b003      	add	sp, #12
 800120e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001210:	ab01      	add	r3, sp, #4
 8001212:	466a      	mov	r2, sp
 8001214:	f7ff ffc8 	bl	80011a8 <__swhatbuf_r>
 8001218:	9f00      	ldr	r7, [sp, #0]
 800121a:	4605      	mov	r5, r0
 800121c:	4639      	mov	r1, r7
 800121e:	4630      	mov	r0, r6
 8001220:	f7ff fb16 	bl	8000850 <_malloc_r>
 8001224:	b948      	cbnz	r0, 800123a <__smakebuf_r+0x46>
 8001226:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800122a:	059a      	lsls	r2, r3, #22
 800122c:	d4ee      	bmi.n	800120c <__smakebuf_r+0x18>
 800122e:	f023 0303 	bic.w	r3, r3, #3
 8001232:	f043 0302 	orr.w	r3, r3, #2
 8001236:	81a3      	strh	r3, [r4, #12]
 8001238:	e7e2      	b.n	8001200 <__smakebuf_r+0xc>
 800123a:	89a3      	ldrh	r3, [r4, #12]
 800123c:	6020      	str	r0, [r4, #0]
 800123e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001242:	81a3      	strh	r3, [r4, #12]
 8001244:	9b01      	ldr	r3, [sp, #4]
 8001246:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800124a:	b15b      	cbz	r3, 8001264 <__smakebuf_r+0x70>
 800124c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001250:	4630      	mov	r0, r6
 8001252:	f000 f81d 	bl	8001290 <_isatty_r>
 8001256:	b128      	cbz	r0, 8001264 <__smakebuf_r+0x70>
 8001258:	89a3      	ldrh	r3, [r4, #12]
 800125a:	f023 0303 	bic.w	r3, r3, #3
 800125e:	f043 0301 	orr.w	r3, r3, #1
 8001262:	81a3      	strh	r3, [r4, #12]
 8001264:	89a3      	ldrh	r3, [r4, #12]
 8001266:	431d      	orrs	r5, r3
 8001268:	81a5      	strh	r5, [r4, #12]
 800126a:	e7cf      	b.n	800120c <__smakebuf_r+0x18>

0800126c <_fstat_r>:
 800126c:	b538      	push	{r3, r4, r5, lr}
 800126e:	4d07      	ldr	r5, [pc, #28]	@ (800128c <_fstat_r+0x20>)
 8001270:	2300      	movs	r3, #0
 8001272:	4604      	mov	r4, r0
 8001274:	4608      	mov	r0, r1
 8001276:	4611      	mov	r1, r2
 8001278:	602b      	str	r3, [r5, #0]
 800127a:	f7ff f860 	bl	800033e <_fstat>
 800127e:	1c43      	adds	r3, r0, #1
 8001280:	d102      	bne.n	8001288 <_fstat_r+0x1c>
 8001282:	682b      	ldr	r3, [r5, #0]
 8001284:	b103      	cbz	r3, 8001288 <_fstat_r+0x1c>
 8001286:	6023      	str	r3, [r4, #0]
 8001288:	bd38      	pop	{r3, r4, r5, pc}
 800128a:	bf00      	nop
 800128c:	200001c4 	.word	0x200001c4

08001290 <_isatty_r>:
 8001290:	b538      	push	{r3, r4, r5, lr}
 8001292:	4d06      	ldr	r5, [pc, #24]	@ (80012ac <_isatty_r+0x1c>)
 8001294:	2300      	movs	r3, #0
 8001296:	4604      	mov	r4, r0
 8001298:	4608      	mov	r0, r1
 800129a:	602b      	str	r3, [r5, #0]
 800129c:	f7ff f85f 	bl	800035e <_isatty>
 80012a0:	1c43      	adds	r3, r0, #1
 80012a2:	d102      	bne.n	80012aa <_isatty_r+0x1a>
 80012a4:	682b      	ldr	r3, [r5, #0]
 80012a6:	b103      	cbz	r3, 80012aa <_isatty_r+0x1a>
 80012a8:	6023      	str	r3, [r4, #0]
 80012aa:	bd38      	pop	{r3, r4, r5, pc}
 80012ac:	200001c4 	.word	0x200001c4

080012b0 <_init>:
 80012b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012b2:	bf00      	nop
 80012b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012b6:	bc08      	pop	{r3}
 80012b8:	469e      	mov	lr, r3
 80012ba:	4770      	bx	lr

080012bc <_fini>:
 80012bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012be:	bf00      	nop
 80012c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012c2:	bc08      	pop	{r3}
 80012c4:	469e      	mov	lr, r3
 80012c6:	4770      	bx	lr
